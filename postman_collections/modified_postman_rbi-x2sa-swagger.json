{
  "item": [
    {
      "id": "e4aa4b9c-19c1-452d-9bcd-1a79f8d2acd0",
      "name": "v1",
      "item": [
        {
          "id": "0148dba4-0630-46a0-8bb9-2ea8a108417e",
          "name": "accounts",
          "item": [
            {
              "id": "61443f1a-cdca-4af3-b41b-34c63f3b7c46",
              "name": "Get Accounts",
              "request": {
                "name": "Get Accounts",
                "description": {},
                "url": {
                  "path": [
                    "v1",
                    "accounts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "key": "withBalance",
                      "value": "{{withBalance}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": "(Required) ",
                    "key": "Consent-ID",
                    "value": "{{Consent-ID}}"
                  },
                  {
                    "disabled": false,
                    "description": "(Required) ",
                    "key": "PSU-ID",
                    "value": "{{PSU-ID}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "edd6a776-06cd-47fa-9e3a-aa4d61ec2697",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v1",
                        "accounts"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "withBalance",
                          "value": "{{withBalance}}"
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Consent-ID",
                        "value": "{{Consent-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Content-Type",
                        "value": "elit nostrud minim"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "disabled": false,
                      "description": "X-Request-ID",
                      "key": "X-Request-ID",
                      "value": "{{X-Request-ID}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"accounts\": [\n    {\n      \"resourceId\": \"ipsum\",\n      \"iban\": \"enim sint id\",\n      \"bic\": \"consequat proident in\",\n      \"pan\": \"cillum ut\",\n      \"bban\": \"in aliqua labore ip\",\n      \"currency\": \"sunt ea\",\n      \"accountType\": \"in cons\",\n      \"cashAccountType\": \"consequat dolor\",\n      \"name\": \"sunt\",\n      \"balances\": [\n        {\n          \"balanceType\": \"reprehenderit ip\",\n          \"lastChangeDateTime\": \"labore minim deserunt eu\",\n          \"referenceDate\": \"enim irure aliquip sint\",\n          \"balanceAmount\": {\n            \"currency\": \"minim\",\n            \"amount\": -24782394.149665207\n          }\n        },\n        {\n          \"balanceType\": \"ullamco sint\",\n          \"lastChangeDateTime\": \"reprehenderit c\",\n          \"referenceDate\": \"mollit cillum non\",\n          \"balanceAmount\": {\n            \"currency\": \"ad nulla\",\n            \"amount\": 73362319.18885595\n          }\n        }\n      ],\n      \"_links\": {\n        \"aute___2\": {\n          \"href\": \"sint ea anim incididunt irure\"\n        },\n        \"Excepteurd\": {\n          \"href\": \"fugiat dolor aliquip\"\n        }\n      }\n    },\n    {\n      \"resourceId\": \"Excep\",\n      \"iban\": \"incididunt ad fugiat velit\",\n      \"bic\": \"exercitation magna\",\n      \"pan\": \"anim ut\",\n      \"bban\": \"est\",\n      \"currency\": \"minim ipsum non laboris nisi\",\n      \"accountType\": \"ex \",\n      \"cashAccountType\": \"exercitation eu aute irure\",\n      \"name\": \"minim consectetur esse\",\n      \"balances\": [\n        {\n          \"balanceType\": \"Duis ex\",\n          \"lastChangeDateTime\": \"ullamco ex laborum\",\n          \"referenceDate\": \"anim aliquip do\",\n          \"balanceAmount\": {\n            \"currency\": \"qui magna mollit\",\n            \"amount\": -16236940.715738386\n          }\n        },\n        {\n          \"balanceType\": \"pariatur sunt qui sint nostrud\",\n          \"lastChangeDateTime\": \"aliqua velit reprehenderit sit\",\n          \"referenceDate\": \"ad\",\n          \"balanceAmount\": {\n            \"currency\": \"eu consectetur id\",\n            \"amount\": 95853654.56458041\n          }\n        }\n      ],\n      \"_links\": {\n        \"sit5\": {\n          \"href\": \"dolore\"\n        }\n      }\n    }\n  ]\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "182641d9-907e-4e9d-b00f-cb73cc967515",
                  "name": "Bad Request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v1",
                        "accounts"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "withBalance",
                          "value": "{{withBalance}}"
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Consent-ID",
                        "value": "{{Consent-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Content-Type",
                        "value": "elit nostrud minim"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "disabled": false,
                      "description": "X-Request-ID",
                      "key": "X-Request-ID",
                      "value": "{{X-Request-ID}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"psuMessage\": \"veniam culpa\",\n  \"tppMessages\": [\n    {\n      \"category\": \"aute enim veniam sunt\",\n      \"code\": \"ut\",\n      \"path\": \"D\",\n      \"text\": \"culpa deserunt minim\"\n    },\n    {\n      \"category\": \"dolore nostrud\",\n      \"code\": \"sit voluptate in dolor nisi\",\n      \"path\": \"incididunt occaecat \",\n      \"text\": \"magna do\"\n    }\n  ],\n  \"_links\": {\n    \"laboris89\": {\n      \"href\": \"aliquip sint\"\n    },\n    \"amet_f51\": {\n      \"href\": \"Lorem en\"\n    },\n    \"quis__2c\": {\n      \"href\": \"ad sint dolor mollit\"\n    }\n  }\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "d8c2fbd4-4168-44bc-b590-3dd0b4650866",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v1",
                        "accounts"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "withBalance",
                          "value": "{{withBalance}}"
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Consent-ID",
                        "value": "{{Consent-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Content-Type",
                        "value": "elit nostrud minim"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "disabled": false,
                      "description": "X-Request-ID",
                      "key": "X-Request-ID",
                      "value": "{{X-Request-ID}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/accounts?withBalance=false for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");      \n        pm.test('Response has the `accounts` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"accounts\")){\n            if(responseData.accounts!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"accounts\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `accounts` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"accounts\");  \n          let accountsArray = _.get(responseData, \"accounts\", \"\");  \n          for (let i = 0; i < accountsArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'accounts' has 'resourceId' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"resourceId\")){\n          if(responseData.accounts[i].resourceId != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].resourceId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"iban\")){\n          if(responseData.accounts[i].iban != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"bic\")){\n          if(responseData.accounts[i].bic != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"pan\")){\n          if(responseData.accounts[i].pan != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"bban\")){\n          if(responseData.accounts[i].bban != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"currency\")){\n          if(responseData.accounts[i].currency != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'accountType' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"accountType\")){\n          if(responseData.accounts[i].accountType != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].accountType`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'cashAccountType' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"cashAccountType\")){\n          if(responseData.accounts[i].cashAccountType != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].cashAccountType`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'name' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"name\")){\n          if(responseData.accounts[i].name != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].name`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'accounts' has 'balances' as an array`,function(){ \n          if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"balances\")){\n            if(responseData.accounts[i].balances != null){\n              pm.expect(Array.isArray(_.get(responseData, `accounts[${i}].balances`))).to.equal(true);\n            }\n          }\n        })\n\n\n      pm.test(`${i} element of array 'accounts' has '_links' as 'object'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"_links\")){\n          if(responseData.accounts[i]._links != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}]._links`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n});\n}\n\nif (pm.response.code == 400){\n    pm.test(\"Bad Request\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Bad Request\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "95a62234-caf6-48cc-bf08-07c821f753b7",
              "name": "{account-Id}",
              "item": [
                {
                  "id": "2c88df34-5274-484e-aa6d-4b5c36c5f31f",
                  "name": "Get Account",
                  "request": {
                    "name": "Get Account",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "accounts",
                        ":account-Id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "withBalance",
                          "value": "{{withBalance}}"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{account-Id}}",
                          "key": "account-Id",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Consent-ID",
                        "value": "{{Consent-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "43f6f081-1a89-4320-8de2-c7cc9e4551b7",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "accounts",
                            ":account-Id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "withBalance",
                              "value": "{{withBalance}}"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{account-Id}}",
                              "key": "account-Id",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Consent-ID",
                            "value": "{{Consent-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"account\": {\n    \"resourceId\": \"et ex\",\n    \"iban\": \"eiusmod incididunt\",\n    \"bic\": \"incididunt nisi aliqua\",\n    \"pan\": \"velit Duis\",\n    \"bban\": \"aliquip sed\",\n    \"currency\": \"officia cupidatat minim elit culpa\",\n    \"accountType\": \"cupidatat ut elit\",\n    \"cashAccountType\": \"consequat Ut dolor cupidatat\",\n    \"name\": \"quis qui u\",\n    \"balances\": [\n      {\n        \"balanceType\": \"a\",\n        \"lastChangeDateTime\": \"aliquip laboris elit occa\",\n        \"referenceDate\": \"eu\",\n        \"balanceAmount\": {\n          \"currency\": \"non qui\",\n          \"amount\": -99134629.67794348\n        }\n      },\n      {\n        \"balanceType\": \"incididunt eiusmod nostrud\",\n        \"lastChangeDateTime\": \"labor\",\n        \"referenceDate\": \"nostrud sit\",\n        \"balanceAmount\": {\n          \"currency\": \"labore fu\",\n          \"amount\": -25187090.934548005\n        }\n      }\n    ],\n    \"_links\": {\n      \"nisi9de\": {\n        \"href\": \"sed Excepteur\"\n      },\n      \"ipsum5\": {\n        \"href\": \"ipsum in quis sunt\"\n      }\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/accounts/:account-Id?withBalance=false for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");      \n        pm.test('Response has the `accounts` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"accounts\")){\n            if(responseData.accounts!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"accounts\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `accounts` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"accounts\");  \n          let accountsArray = _.get(responseData, \"accounts\", \"\");  \n          for (let i = 0; i < accountsArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'accounts' has 'resourceId' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"resourceId\")){\n          if(responseData.accounts[i].resourceId != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].resourceId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"iban\")){\n          if(responseData.accounts[i].iban != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"bic\")){\n          if(responseData.accounts[i].bic != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"pan\")){\n          if(responseData.accounts[i].pan != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"bban\")){\n          if(responseData.accounts[i].bban != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"currency\")){\n          if(responseData.accounts[i].currency != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'accountType' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"accountType\")){\n          if(responseData.accounts[i].accountType != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].accountType`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'cashAccountType' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"cashAccountType\")){\n          if(responseData.accounts[i].cashAccountType != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].cashAccountType`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'name' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"name\")){\n          if(responseData.accounts[i].name != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].name`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'accounts' has 'balances' as an array`,function(){ \n          if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"balances\")){\n            if(responseData.accounts[i].balances != null){\n              pm.expect(Array.isArray(_.get(responseData, `accounts[${i}].balances`))).to.equal(true);\n            }\n          }\n        })\n\n\n      pm.test(`${i} element of array 'accounts' has '_links' as 'object'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"_links\")){\n          if(responseData.accounts[i]._links != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}]._links`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "ba289b1f-918e-4c00-b264-fcb9bf337b17",
                  "name": "Get Account Balances",
                  "request": {
                    "name": "Get Account Balances",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "accounts",
                        ":account-Id",
                        "balances"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{account-Id}}",
                          "key": "account-Id",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Consent-ID",
                        "value": "{{Consent-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "a6698a89-fc89-45e9-90c7-eac9b36297dc",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "accounts",
                            ":account-Id",
                            "balances"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{account-Id}}",
                              "key": "account-Id",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Consent-ID",
                            "value": "{{Consent-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"balances\": [\n    {\n      \"balanceType\": \"laboris nisi Excepteur\",\n      \"lastChangeDateTime\": \"et ni\",\n      \"referenceDate\": \"officia velit occaecat nostrud\",\n      \"balanceAmount\": {\n        \"currency\": \"cillum quis ea\",\n        \"amount\": -30741594.557763323\n      }\n    },\n    {\n      \"balanceType\": \"amet dolor\",\n      \"lastChangeDateTime\": \"ut Ut elit esse\",\n      \"referenceDate\": \"amet sit cillum veniam\",\n      \"balanceAmount\": {\n        \"currency\": \"eiusmod\",\n        \"amount\": -75654731.00547075\n      }\n    }\n  ]\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/accounts/:account-Id/balances for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");      \n        pm.test('Response has the `accounts` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"accounts\")){\n            if(responseData.accounts!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"accounts\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `accounts` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"accounts\");  \n          let accountsArray = _.get(responseData, \"accounts\", \"\");  \n          for (let i = 0; i < accountsArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'accounts' has 'resourceId' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"resourceId\")){\n          if(responseData.accounts[i].resourceId != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].resourceId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"iban\")){\n          if(responseData.accounts[i].iban != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"bic\")){\n          if(responseData.accounts[i].bic != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"pan\")){\n          if(responseData.accounts[i].pan != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"bban\")){\n          if(responseData.accounts[i].bban != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"currency\")){\n          if(responseData.accounts[i].currency != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'accountType' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"accountType\")){\n          if(responseData.accounts[i].accountType != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].accountType`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'cashAccountType' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"cashAccountType\")){\n          if(responseData.accounts[i].cashAccountType != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].cashAccountType`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'name' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"name\")){\n          if(responseData.accounts[i].name != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].name`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'accounts' has 'balances' as an array`,function(){ \n          if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"balances\")){\n            if(responseData.accounts[i].balances != null){\n              pm.expect(Array.isArray(_.get(responseData, `accounts[${i}].balances`))).to.equal(true);\n            }\n          }\n        })\n\n\n      pm.test(`${i} element of array 'accounts' has '_links' as 'object'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"_links\")){\n          if(responseData.accounts[i]._links != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}]._links`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "b640abc2-5822-468b-98ee-c92d58be5e32",
                  "name": "Get Account Transactions",
                  "request": {
                    "name": "Get Account Transactions",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "accounts",
                        ":account-Id",
                        "transactions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "date_from",
                          "value": "{{date_from}}",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "key": "bookingStatus",
                          "value": "{{bookingStatus}}",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "key": "withBalance",
                          "value": "{{withBalance}}"
                        },
                        {
                          "disabled": false,
                          "key": "date_to",
                          "value": "{{date_to}}"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{account-Id}}",
                          "key": "account-Id",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Consent-ID",
                        "value": "{{Consent-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "6b82c877-4953-49fb-a2e2-955224da2342",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "accounts",
                            ":account-Id",
                            "transactions"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "date_from",
                              "value": "{{date_from}}"
                            },
                            {
                              "key": "bookingStatus",
                              "value": "{{bookingStatus}}"
                            },
                            {
                              "key": "withBalance",
                              "value": "{{withBalance}}"
                            },
                            {
                              "key": "date_to",
                              "value": "{{date_to}}"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{account-Id}}",
                              "key": "account-Id",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Consent-ID",
                            "value": "{{Consent-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": [],
                      "_postman_previewlanguage": "text"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/accounts/:account-Id/transactions?date_from=<string>&bookingStatus=booked&withBalance=false&date_to=<string> for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");      \n        pm.test('Response has the `accounts` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"accounts\")){\n            if(responseData.accounts!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"accounts\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `accounts` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"accounts\");  \n          let accountsArray = _.get(responseData, \"accounts\", \"\");  \n          for (let i = 0; i < accountsArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'accounts' has 'resourceId' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"resourceId\")){\n          if(responseData.accounts[i].resourceId != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].resourceId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"iban\")){\n          if(responseData.accounts[i].iban != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"bic\")){\n          if(responseData.accounts[i].bic != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"pan\")){\n          if(responseData.accounts[i].pan != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"bban\")){\n          if(responseData.accounts[i].bban != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"currency\")){\n          if(responseData.accounts[i].currency != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'accountType' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"accountType\")){\n          if(responseData.accounts[i].accountType != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].accountType`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'cashAccountType' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"cashAccountType\")){\n          if(responseData.accounts[i].cashAccountType != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].cashAccountType`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'accounts' has 'name' as 'string'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"name\")){\n          if(responseData.accounts[i].name != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}].name`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'accounts' has 'balances' as an array`,function(){ \n          if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"balances\")){\n            if(responseData.accounts[i].balances != null){\n              pm.expect(Array.isArray(_.get(responseData, `accounts[${i}].balances`))).to.equal(true);\n            }\n          }\n        })\n\n\n      pm.test(`${i} element of array 'accounts' has '_links' as 'object'`,function(){ \n        if(pm.expect(responseData.accounts[i]).to.have.nested.property(\"_links\")){\n          if(responseData.accounts[i]._links != null){\n            pm.expect(typeof _.get(responseData,`accounts[${i}]._links`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        {
          "id": "72130eae-1a43-410c-a97b-f8ebeb152385",
          "name": "payments",
          "item": [
            {
              "id": "8d3ac750-23ea-43d6-9851-88c91e76a0f1",
              "name": "austrian-cross-border-credit-transfer",
              "item": [
                {
                  "id": "148d7eeb-9a6d-43bb-896b-ad0008f3f1ae",
                  "name": "Post Credit Transfer",
                  "request": {
                    "name": "Post Credit Transfer",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "payments",
                        "austrian-cross-border-credit-transfer"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-IP-Address",
                        "value": "{{PSU-IP-Address}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrCdtTrfInitn>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <Authstn>\n        <Item>\n        </Item>\n      </Authstn>\n      <Authstn>\n        <Item>\n        </Item>\n      </Authstn>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <InitgPty>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n          <AdrTp>(integer)</AdrTp>\n          <AdrTpSpecified>(boolean)</AdrTpSpecified>\n          <Dept>(string)</Dept>\n          <SubDept>(string)</SubDept>\n          <StrtNm>(string)</StrtNm>\n          <BldgNb>(string)</BldgNb>\n          <PstCd>(string)</PstCd>\n          <TwnNm>(string)</TwnNm>\n          <CtrySubDvsn>(string)</CtrySubDvsn>\n          <Ctry>(string)</Ctry>\n        </PstlAdr>\n        <Id>\n          <Item>\n          </Item>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n          <NmPrfx>(integer)</NmPrfx>\n          <NmPrfxSpecified>(boolean)</NmPrfxSpecified>\n          <Nm>(string)</Nm>\n          <PhneNb>(string)</PhneNb>\n          <MobNb>(string)</MobNb>\n          <FaxNb>(string)</FaxNb>\n          <EmailAdr>(string)</EmailAdr>\n          <Othr>(string)</Othr>\n        </CtctDtls>\n      </InitgPty>\n      <FwdgAgt>\n        <FinInstnId>\n          <BIC>(string)</BIC>\n          <Nm>(string)</Nm>\n        </FinInstnId>\n        <BrnchId>\n          <Id>(string)</Id>\n          <Nm>(string)</Nm>\n        </BrnchId>\n      </FwdgAgt>\n    </GrpHdr>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <LclInstrm>\n        </LclInstrm>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <PoolgAdjstmntDt>(string)</PoolgAdjstmntDt>\n      <PoolgAdjstmntDtSpecified>(boolean)</PoolgAdjstmntDtSpecified>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </DbtrAgt>\n      <DbtrAgtAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAgtAcct>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <ChrgsAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </ChrgsAcct>\n      <ChrgsAcctAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </ChrgsAcctAgt>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n    </PmtInf>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <LclInstrm>\n        </LclInstrm>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <PoolgAdjstmntDt>(string)</PoolgAdjstmntDt>\n      <PoolgAdjstmntDtSpecified>(boolean)</PoolgAdjstmntDtSpecified>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </DbtrAgt>\n      <DbtrAgtAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAgtAcct>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <ChrgsAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </ChrgsAcct>\n      <ChrgsAcctAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </ChrgsAcctAgt>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n    </PmtInf>\n  </CstmrCdtTrfInitn>\n</element>",
                      "options": {
                        "raw": {
                          "language": "xml"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "8b034fe7-c96a-44aa-841e-0d9c16309b91",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "austrian-cross-border-credit-transfer"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "355efc31-fd9e-456b-a9e8-af860d9370d9",
                      "name": "Bad Request",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "austrian-cross-border-credit-transfer"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": [],
                      "_postman_previewlanguage": "text"
                    },
                    {
                      "id": "8a224044-c0d9-456f-92ee-9aa70cc8fc8b",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "austrian-cross-border-credit-transfer"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/austrian-cross-border-credit-transfer for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 400){\n    pm.test(\"Bad Request\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Bad Request\");});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "21257e71-7093-45c6-817c-c90abfd72a28",
                  "name": "{paymentId}",
                  "item": [
                    {
                      "id": "96f572a8-0050-4269-a1d1-31b7c9d38557",
                      "name": "Get Credit Transfer",
                      "request": {
                        "name": "Get Credit Transfer",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "austrian-cross-border-credit-transfer",
                            ":paymentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/xml"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "a5e87c8c-5c9a-4874-87a5-d12bcb81e119",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrCdtTrfInitn>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <Authstn>\n        <Item>\n        </Item>\n      </Authstn>\n      <Authstn>\n        <Item>\n        </Item>\n      </Authstn>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <InitgPty>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n          <AdrTp>(integer)</AdrTp>\n          <AdrTpSpecified>(boolean)</AdrTpSpecified>\n          <Dept>(string)</Dept>\n          <SubDept>(string)</SubDept>\n          <StrtNm>(string)</StrtNm>\n          <BldgNb>(string)</BldgNb>\n          <PstCd>(string)</PstCd>\n          <TwnNm>(string)</TwnNm>\n          <CtrySubDvsn>(string)</CtrySubDvsn>\n          <Ctry>(string)</Ctry>\n        </PstlAdr>\n        <Id>\n          <Item>\n          </Item>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n          <NmPrfx>(integer)</NmPrfx>\n          <NmPrfxSpecified>(boolean)</NmPrfxSpecified>\n          <Nm>(string)</Nm>\n          <PhneNb>(string)</PhneNb>\n          <MobNb>(string)</MobNb>\n          <FaxNb>(string)</FaxNb>\n          <EmailAdr>(string)</EmailAdr>\n          <Othr>(string)</Othr>\n        </CtctDtls>\n      </InitgPty>\n      <FwdgAgt>\n        <FinInstnId>\n          <BIC>(string)</BIC>\n          <Nm>(string)</Nm>\n        </FinInstnId>\n        <BrnchId>\n          <Id>(string)</Id>\n          <Nm>(string)</Nm>\n        </BrnchId>\n      </FwdgAgt>\n    </GrpHdr>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <LclInstrm>\n        </LclInstrm>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <PoolgAdjstmntDt>(string)</PoolgAdjstmntDt>\n      <PoolgAdjstmntDtSpecified>(boolean)</PoolgAdjstmntDtSpecified>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </DbtrAgt>\n      <DbtrAgtAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAgtAcct>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <ChrgsAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </ChrgsAcct>\n      <ChrgsAcctAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </ChrgsAcctAgt>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n    </PmtInf>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <LclInstrm>\n        </LclInstrm>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <PoolgAdjstmntDt>(string)</PoolgAdjstmntDt>\n      <PoolgAdjstmntDtSpecified>(boolean)</PoolgAdjstmntDtSpecified>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </DbtrAgt>\n      <DbtrAgtAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAgtAcct>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <ChrgsAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </ChrgsAcct>\n      <ChrgsAcctAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </ChrgsAcctAgt>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n    </PmtInf>\n  </CstmrCdtTrfInitn>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/austrian-cross-border-credit-transfer/:paymentId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.Authstn` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.GrpHdr.Authstn` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\");  \n          let AuthstnArray = _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\", \"\");  \n          for (let i = 0; i < AuthstnArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.GrpHdr.Authstn' has 'Item' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i]).to.have.nested.property(\"Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i].Item != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.GrpHdr.Authstn[${i}].Item`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSumSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSumSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSumSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDtSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDtSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDtSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDtSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgtAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgtAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgtAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgtAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcctAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcctAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcctAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcctAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "4b27220a-5ca4-4284-b281-f931b524c59f",
                      "name": "Delete Credit Transfer",
                      "request": {
                        "name": "Delete Credit Transfer",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "austrian-cross-border-credit-transfer",
                            ":paymentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "600d1ea2-fe0c-4805-89c7-ca8cc8fbcc0b",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "No Content",
                          "code": 204,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"transactionStatus\": \"ipsum culpa eu dolor\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "80f67fe0-2c12-4bad-a0d6-de17c43f67a1",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/austrian-cross-border-credit-transfer/:paymentId for http method type delete in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 204){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"No Content\");\n      pm.test('Response has the `transactionStatus` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"transactionStatus\")){\n          if(responseData.transactionStatus!=null){\n            pm.expect(typeof _.get(responseData, \"transactionStatus\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "a139b9c1-287c-4bc4-9137-70aa39db4ea9",
                      "name": "Get Credit Transfer Status",
                      "request": {
                        "name": "Get Credit Transfer Status",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "austrian-cross-border-credit-transfer",
                            ":paymentId",
                            "status"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/xml"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "097d1f14-8fc1-4826-8894-48b143d6c47b",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrPmtStsRpt>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <Item>\n        <FinInstnId>\n          <BIC>(string)</BIC>\n        </FinInstnId>\n      </Item>\n      <ItemElementName>(integer)</ItemElementName>\n    </GrpHdr>\n    <OrgnlGrpInfAndSts>\n      <OrgnlMsgId>(string)</OrgnlMsgId>\n      <OrgnlMsgNmId>(string)</OrgnlMsgNmId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <GrpSts>(integer)</GrpSts>\n      <GrpStsSpecified>(boolean)</GrpStsSpecified>\n      <StsRsnInf>\n        <Orgtr>\n        </Orgtr>\n        <Rsn>\n        </Rsn>\n        <AddtlInf>(string)</AddtlInf>\n        <AddtlInf>(string)</AddtlInf>\n      </StsRsnInf>\n      <StsRsnInf>\n        <Orgtr>\n        </Orgtr>\n        <Rsn>\n        </Rsn>\n        <AddtlInf>(string)</AddtlInf>\n        <AddtlInf>(string)</AddtlInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n    </OrgnlGrpInfAndSts>\n    <OrgnlPmtInfAndSts>\n      <OrgnlPmtInfId>(string)</OrgnlPmtInfId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <PmtInfSts>(integer)</PmtInfSts>\n      <PmtInfStsSpecified>(boolean)</PmtInfStsSpecified>\n      <StsRsnInf>\n      </StsRsnInf>\n      <StsRsnInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n    </OrgnlPmtInfAndSts>\n    <OrgnlPmtInfAndSts>\n      <OrgnlPmtInfId>(string)</OrgnlPmtInfId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <PmtInfSts>(integer)</PmtInfSts>\n      <PmtInfStsSpecified>(boolean)</PmtInfStsSpecified>\n      <StsRsnInf>\n      </StsRsnInf>\n      <StsRsnInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n    </OrgnlPmtInfAndSts>\n  </CstmrPmtStsRpt>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        },
                        {
                          "id": "e38fac16-dd57-49c9-bbb5-5db60f4e3ceb",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <psuMessage>(string)</psuMessage>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <_links>\n  </_links>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        },
                        {
                          "id": "dc8ae324-57a1-4e27-9b67-e446407994da",
                          "name": "Forbidden",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <psuMessage>(string)</psuMessage>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <_links>\n  </_links>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/austrian-cross-border-credit-transfer/:paymentId/status for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.Authstn` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.GrpHdr.Authstn` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\");  \n          let AuthstnArray = _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\", \"\");  \n          for (let i = 0; i < AuthstnArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.GrpHdr.Authstn' has 'Item' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i]).to.have.nested.property(\"Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i].Item != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.GrpHdr.Authstn[${i}].Item`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSumSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSumSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSumSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDtSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDtSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDtSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDtSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgtAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgtAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgtAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgtAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcctAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcctAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcctAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcctAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");});\n}\n\nif (pm.response.code == 403){\n    pm.test(\"Forbidden\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Forbidden\");});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "3006e734-e8c0-4a7c-b669-7977643e71a5",
                      "name": "authorisations",
                      "item": [
                        {
                          "id": "7e704749-48cf-499f-b229-9e3cb306400a",
                          "name": "Get Authorisations",
                          "request": {
                            "name": "Get Authorisations",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "GET",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "ee327fc8-b2f7-4a96-8db0-035ab1b360e8",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "austrian-cross-border-credit-transfer",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"authorisationIds\": [\n    \"aliq\",\n    \"quis\"\n  ]\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/austrian-cross-border-credit-transfer/:paymentId/authorisations for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.Authstn` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.GrpHdr.Authstn` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\");  \n          let AuthstnArray = _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\", \"\");  \n          for (let i = 0; i < AuthstnArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.GrpHdr.Authstn' has 'Item' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i]).to.have.nested.property(\"Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i].Item != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.GrpHdr.Authstn[${i}].Item`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSumSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSumSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSumSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDtSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDtSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDtSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDtSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgtAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgtAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgtAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgtAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcctAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcctAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcctAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcctAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "c62db471-13a5-46e7-a246-7522342da959",
                          "name": "Post Authorisation",
                          "request": {
                            "name": "Post Authorisation",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "POST",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "c04d9347-3f8e-43d1-a1b7-bf6c15a3e1f0",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "austrian-cross-border-credit-transfer",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "POST",
                                "body": {}
                              },
                              "status": "Created",
                              "code": 201,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"psuMessage\": \"ut voluptate consectet\",\n  \"authorisationId\": \"et Duis aute cillum anim\",\n  \"_links\": {\n    \"irure_14d\": {\n      \"href\": \"proident non\"\n    }\n  },\n  \"scaStatus\": \"officia amet sed\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "8ea4b639-c05a-4139-a787-3055968d769b",
                              "name": "Unauthorized",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "austrian-cross-border-credit-transfer",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "POST",
                                "body": {}
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/austrian-cross-border-credit-transfer/:paymentId/authorisations for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "367c741b-2077-40e1-9423-b4af7c391d9d",
                          "name": "Get Authorisation",
                          "request": {
                            "name": "Get Authorisation",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "authorisations",
                                ":authorisationId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{authorisationId}}",
                                  "key": "authorisationId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "GET",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "5efeea4d-5c43-4aee-86dd-8900e1046d73",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "austrian-cross-border-credit-transfer",
                                    ":paymentId",
                                    "authorisations",
                                    ":authorisationId"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{authorisationId}}",
                                      "key": "authorisationId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"scaStatus\": \"sed Excepteur aute dolor\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/austrian-cross-border-credit-transfer/:paymentId/authorisations/:authorisationId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.Authstn` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.GrpHdr.Authstn` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\");  \n          let AuthstnArray = _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\", \"\");  \n          for (let i = 0; i < AuthstnArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.GrpHdr.Authstn' has 'Item' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i]).to.have.nested.property(\"Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i].Item != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.GrpHdr.Authstn[${i}].Item`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSumSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSumSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSumSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDtSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDtSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDtSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDtSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgtAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgtAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgtAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgtAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcctAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcctAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcctAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcctAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        }
                      ],
                      "event": []
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "d648f6c2-dc8a-47a8-b4dd-f784bddb6502",
              "name": "sepa-credit-transfers",
              "item": [
                {
                  "id": "c104cdbf-6c9d-47f5-ab59-5d3ab910dd13",
                  "name": "Post Credit Transfer",
                  "request": {
                    "name": "Post Credit Transfer",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "payments",
                        "sepa-credit-transfers"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-IP-Address",
                        "value": "{{PSU-IP-Address}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"instructedAmount\": {\n        \"currency\": \"{{currency}}\",\n        \"amount\": \"{{amount}}\"\n    },\n    \"debtorAccount\": {\n        \"iban\": \"{{iban}}\"\n    },\n    \"debtorName\": \"{{debtorName}}\",\n    \"creditorName\": \"{{creditorName}}\",\n    \"creditorAccount\": {\n        \"iban\": \"{{iban}}\"\n    },\n    \"ultimateDebtor\": \"{{ultimateDebtor}}\",\n    \"ultimateCreditor\": \"{{ultimateCreditor}}\",\n    \"debtorId\": \"{{debtorId}}\",\n    \"creditorId\": \"{{creditorId}}\",\n    \"creditorAgent\": \"{{creditorAgent}}\",\n    \"creditorAddress\": {\n        \"country\": \"{{country}}\",\n        \"street\": \"{{street}}\",\n        \"buildingNumber\": \"{{buildingNumber}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\"\n    },\n    \"requestedExecutionDate\": \"{{requestedExecutionDate}}\",\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\n    \"purposeCode\": \"{{purposeCode}}\",\n    \"remittanceInformationUnstructured\": \"{{remittanceInformationUnstructured}}\",\n    \"remittanceInformationStructured\": {\n        \"reference\": \"{{reference}}\",\n        \"referenceType\": \"{{referenceType}}\",\n        \"referenceIssuer\": \"{{referenceIssuer}}\"\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "0539665d-349a-4342-b70e-28b80f6210cf",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "sepa-credit-transfers"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"instructedAmount\": {\n        \"currency\": \"{{currency}}\",\n        \"amount\": \"{{amount}}\"\n    },\n    \"debtorAccount\": {\n        \"iban\": \"{{iban}}\"\n    },\n    \"debtorName\": \"{{debtorName}}\",\n    \"creditorName\": \"{{creditorName}}\",\n    \"creditorAccount\": {\n        \"iban\": \"{{iban}}\"\n    },\n    \"ultimateDebtor\": \"{{ultimateDebtor}}\",\n    \"ultimateCreditor\": \"{{ultimateCreditor}}\",\n    \"debtorId\": \"{{debtorId}}\",\n    \"creditorId\": \"{{creditorId}}\",\n    \"creditorAgent\": \"{{creditorAgent}}\",\n    \"creditorAddress\": {\n        \"country\": \"{{country}}\",\n        \"street\": \"{{street}}\",\n        \"buildingNumber\": \"{{buildingNumber}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\"\n    },\n    \"requestedExecutionDate\": \"{{requestedExecutionDate}}\",\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\n    \"purposeCode\": \"{{purposeCode}}\",\n    \"remittanceInformationUnstructured\": \"{{remittanceInformationUnstructured}}\",\n    \"remittanceInformationStructured\": {\n        \"reference\": \"{{reference}}\",\n        \"referenceType\": \"{{referenceType}}\",\n        \"referenceIssuer\": \"{{referenceIssuer}}\"\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "254326fd-34a6-427f-af7a-3634db8039f7",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "sepa-credit-transfers"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"instructedAmount\": {\n        \"currency\": \"{{currency}}\",\n        \"amount\": \"{{amount}}\"\n    },\n    \"debtorAccount\": {\n        \"iban\": \"{{iban}}\"\n    },\n    \"debtorName\": \"{{debtorName}}\",\n    \"creditorName\": \"{{creditorName}}\",\n    \"creditorAccount\": {\n        \"iban\": \"{{iban}}\"\n    },\n    \"ultimateDebtor\": \"{{ultimateDebtor}}\",\n    \"ultimateCreditor\": \"{{ultimateCreditor}}\",\n    \"debtorId\": \"{{debtorId}}\",\n    \"creditorId\": \"{{creditorId}}\",\n    \"creditorAgent\": \"{{creditorAgent}}\",\n    \"creditorAddress\": {\n        \"country\": \"{{country}}\",\n        \"street\": \"{{street}}\",\n        \"buildingNumber\": \"{{buildingNumber}}\",\n        \"postalCode\": \"{{postalCode}}\",\n        \"city\": \"{{city}}\"\n    },\n    \"requestedExecutionDate\": \"{{requestedExecutionDate}}\",\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\n    \"purposeCode\": \"{{purposeCode}}\",\n    \"remittanceInformationUnstructured\": \"{{remittanceInformationUnstructured}}\",\n    \"remittanceInformationStructured\": {\n        \"reference\": \"{{reference}}\",\n        \"referenceType\": \"{{referenceType}}\",\n        \"referenceIssuer\": \"{{referenceIssuer}}\"\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/sepa-credit-transfers for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "afdeee12-9d1d-45b2-8325-e2b5cbb59e93",
                  "name": "{paymentId}",
                  "item": [
                    {
                      "id": "564e35f0-0916-43a2-9899-255472c1b7fb",
                      "name": "Get Credit Transfer",
                      "request": {
                        "name": "Get Credit Transfer",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "sepa-credit-transfers",
                            ":paymentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "1864250b-c2c9-43e9-b707-d52272401258",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "sepa-credit-transfers",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"instructedAmount\": {\n    \"currency\": \"<string>\",\n    \"amount\": \"<double>\"\n  },\n  \"debtorAccount\": {\n    \"iban\": \"<string>\"\n  },\n  \"debtorName\": \"<string>\",\n  \"creditorName\": \"<string>\",\n  \"creditorAccount\": {\n    \"iban\": \"<string>\"\n  },\n  \"ultimateDebtor\": \"<string>\",\n  \"ultimateCreditor\": \"<string>\",\n  \"debtorId\": \"<string>\",\n  \"creditorId\": \"<string>\",\n  \"creditorAgent\": \"<string>\",\n  \"creditorAddress\": {\n    \"country\": \"<string>\",\n    \"street\": \"<string>\",\n    \"buildingNumber\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"city\": \"<string>\"\n  },\n  \"requestedExecutionDate\": \"<dateTime>\",\n  \"endToEndIdentification\": \"<string>\",\n  \"purposeCode\": \"<string>\",\n  \"remittanceInformationUnstructured\": \"<string>\",\n  \"remittanceInformationStructured\": {\n    \"reference\": \"<string>\",\n    \"referenceType\": \"<string>\",\n    \"referenceIssuer\": \"<string>\"\n  }\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/sepa-credit-transfers/:paymentId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `instructedAmount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount\")){\n          if(responseData.instructedAmount!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `instructedAmount.currency` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount.currency\")){\n          if(responseData.instructedAmount.currency!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount.currency\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `instructedAmount.amount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount.amount\")){\n          if(responseData.instructedAmount.amount!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount.amount\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorAccount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorAccount\")){\n          if(responseData.debtorAccount!=null){\n            pm.expect(typeof _.get(responseData, \"debtorAccount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorAccount.iban` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorAccount.iban\")){\n          if(responseData.debtorAccount.iban!=null){\n            pm.expect(typeof _.get(responseData, \"debtorAccount.iban\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorName` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorName\")){\n          if(responseData.debtorName!=null){\n            pm.expect(typeof _.get(responseData, \"debtorName\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorName` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorName\")){\n          if(responseData.creditorName!=null){\n            pm.expect(typeof _.get(responseData, \"creditorName\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAccount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAccount\")){\n          if(responseData.creditorAccount!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAccount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAccount.iban` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAccount.iban\")){\n          if(responseData.creditorAccount.iban!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAccount.iban\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `ultimateDebtor` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"ultimateDebtor\")){\n          if(responseData.ultimateDebtor!=null){\n            pm.expect(typeof _.get(responseData, \"ultimateDebtor\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `ultimateCreditor` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"ultimateCreditor\")){\n          if(responseData.ultimateCreditor!=null){\n            pm.expect(typeof _.get(responseData, \"ultimateCreditor\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorId\")){\n          if(responseData.debtorId!=null){\n            pm.expect(typeof _.get(responseData, \"debtorId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorId\")){\n          if(responseData.creditorId!=null){\n            pm.expect(typeof _.get(responseData, \"creditorId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAgent` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAgent\")){\n          if(responseData.creditorAgent!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAgent\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress\")){\n          if(responseData.creditorAddress!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.country` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.country\")){\n          if(responseData.creditorAddress.country!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.country\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.street` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.street\")){\n          if(responseData.creditorAddress.street!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.street\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.buildingNumber` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.buildingNumber\")){\n          if(responseData.creditorAddress.buildingNumber!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.buildingNumber\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.postalCode` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.postalCode\")){\n          if(responseData.creditorAddress.postalCode!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.postalCode\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.city` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.city\")){\n          if(responseData.creditorAddress.city!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.city\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `requestedExecutionDate` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"requestedExecutionDate\")){\n          if(responseData.requestedExecutionDate!=null){\n            pm.expect(typeof _.get(responseData, \"requestedExecutionDate\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('requestedExecutionDate format to be date-time',function(){\n                pm.expect(_.get(responseData, \"requestedExecutionDate\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `endToEndIdentification` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"endToEndIdentification\")){\n          if(responseData.endToEndIdentification!=null){\n            pm.expect(typeof _.get(responseData, \"endToEndIdentification\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `purposeCode` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"purposeCode\")){\n          if(responseData.purposeCode!=null){\n            pm.expect(typeof _.get(responseData, \"purposeCode\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationUnstructured` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationUnstructured\")){\n          if(responseData.remittanceInformationUnstructured!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationUnstructured\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured\")){\n          if(responseData.remittanceInformationStructured!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.reference` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.reference\")){\n          if(responseData.remittanceInformationStructured.reference!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.reference\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.referenceType` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.referenceType\")){\n          if(responseData.remittanceInformationStructured.referenceType!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.referenceType\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.referenceIssuer` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.referenceIssuer\")){\n          if(responseData.remittanceInformationStructured.referenceIssuer!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.referenceIssuer\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "7684c2df-1ed9-4947-9fe3-5bc273c8ab14",
                      "name": "Delete Credit Transfer",
                      "request": {
                        "name": "Delete Credit Transfer",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "sepa-credit-transfers",
                            ":paymentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "404d1189-946e-449e-a6ac-51d6d95b6c37",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "sepa-credit-transfers",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "No Content",
                          "code": 204,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"transactionStatus\": \"ipsum culpa eu dolor\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "c707d184-6022-449f-a8c6-c4ee194d270f",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "sepa-credit-transfers",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/sepa-credit-transfers/:paymentId for http method type delete in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 204){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"No Content\");\n      pm.test('Response has the `transactionStatus` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"transactionStatus\")){\n          if(responseData.transactionStatus!=null){\n            pm.expect(typeof _.get(responseData, \"transactionStatus\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "eb432890-91b0-48d3-add3-31554ac1b733",
                      "name": "Get Credit Transfer Status",
                      "request": {
                        "name": "Get Credit Transfer Status",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "sepa-credit-transfers",
                            ":paymentId",
                            "status"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "817fd64f-25a0-4b9e-abf6-c4b36aa879a0",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "sepa-credit-transfers",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        },
                        {
                          "id": "7ace30a4-a125-4e17-a32e-7ad921885fb6",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "sepa-credit-transfers",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "bf1d9d81-188b-4d66-b43e-93239f2bff1b",
                          "name": "Forbidden",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "sepa-credit-transfers",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/sepa-credit-transfers/:paymentId/status for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `instructedAmount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount\")){\n          if(responseData.instructedAmount!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `instructedAmount.currency` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount.currency\")){\n          if(responseData.instructedAmount.currency!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount.currency\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `instructedAmount.amount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount.amount\")){\n          if(responseData.instructedAmount.amount!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount.amount\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorAccount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorAccount\")){\n          if(responseData.debtorAccount!=null){\n            pm.expect(typeof _.get(responseData, \"debtorAccount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorAccount.iban` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorAccount.iban\")){\n          if(responseData.debtorAccount.iban!=null){\n            pm.expect(typeof _.get(responseData, \"debtorAccount.iban\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorName` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorName\")){\n          if(responseData.debtorName!=null){\n            pm.expect(typeof _.get(responseData, \"debtorName\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorName` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorName\")){\n          if(responseData.creditorName!=null){\n            pm.expect(typeof _.get(responseData, \"creditorName\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAccount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAccount\")){\n          if(responseData.creditorAccount!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAccount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAccount.iban` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAccount.iban\")){\n          if(responseData.creditorAccount.iban!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAccount.iban\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `ultimateDebtor` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"ultimateDebtor\")){\n          if(responseData.ultimateDebtor!=null){\n            pm.expect(typeof _.get(responseData, \"ultimateDebtor\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `ultimateCreditor` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"ultimateCreditor\")){\n          if(responseData.ultimateCreditor!=null){\n            pm.expect(typeof _.get(responseData, \"ultimateCreditor\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorId\")){\n          if(responseData.debtorId!=null){\n            pm.expect(typeof _.get(responseData, \"debtorId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorId\")){\n          if(responseData.creditorId!=null){\n            pm.expect(typeof _.get(responseData, \"creditorId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAgent` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAgent\")){\n          if(responseData.creditorAgent!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAgent\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress\")){\n          if(responseData.creditorAddress!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.country` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.country\")){\n          if(responseData.creditorAddress.country!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.country\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.street` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.street\")){\n          if(responseData.creditorAddress.street!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.street\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.buildingNumber` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.buildingNumber\")){\n          if(responseData.creditorAddress.buildingNumber!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.buildingNumber\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.postalCode` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.postalCode\")){\n          if(responseData.creditorAddress.postalCode!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.postalCode\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.city` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.city\")){\n          if(responseData.creditorAddress.city!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.city\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `requestedExecutionDate` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"requestedExecutionDate\")){\n          if(responseData.requestedExecutionDate!=null){\n            pm.expect(typeof _.get(responseData, \"requestedExecutionDate\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('requestedExecutionDate format to be date-time',function(){\n                pm.expect(_.get(responseData, \"requestedExecutionDate\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `endToEndIdentification` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"endToEndIdentification\")){\n          if(responseData.endToEndIdentification!=null){\n            pm.expect(typeof _.get(responseData, \"endToEndIdentification\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `purposeCode` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"purposeCode\")){\n          if(responseData.purposeCode!=null){\n            pm.expect(typeof _.get(responseData, \"purposeCode\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationUnstructured` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationUnstructured\")){\n          if(responseData.remittanceInformationUnstructured!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationUnstructured\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured\")){\n          if(responseData.remittanceInformationStructured!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.reference` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.reference\")){\n          if(responseData.remittanceInformationStructured.reference!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.reference\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.referenceType` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.referenceType\")){\n          if(responseData.remittanceInformationStructured.referenceType!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.referenceType\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.referenceIssuer` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.referenceIssuer\")){\n          if(responseData.remittanceInformationStructured.referenceIssuer!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.referenceIssuer\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");});\n}\n\nif (pm.response.code == 403){\n    pm.test(\"Forbidden\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Forbidden\");});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "9d868c11-54b0-40be-8146-b6c1bbf0e55a",
                      "name": "authorisations",
                      "item": [
                        {
                          "id": "aed2885d-86f2-44ec-91fc-b0eb039b9c02",
                          "name": "Get Authorisations",
                          "request": {
                            "name": "Get Authorisations",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "sepa-credit-transfers",
                                ":paymentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "4a585f60-98ea-4ad8-984a-b0cb63e40d6e",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"authorisationIds\": [\n    \"sed consequat \",\n    \"quis\"\n  ]\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/sepa-credit-transfers/:paymentId/authorisations for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `instructedAmount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount\")){\n          if(responseData.instructedAmount!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `instructedAmount.currency` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount.currency\")){\n          if(responseData.instructedAmount.currency!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount.currency\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `instructedAmount.amount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount.amount\")){\n          if(responseData.instructedAmount.amount!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount.amount\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorAccount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorAccount\")){\n          if(responseData.debtorAccount!=null){\n            pm.expect(typeof _.get(responseData, \"debtorAccount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorAccount.iban` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorAccount.iban\")){\n          if(responseData.debtorAccount.iban!=null){\n            pm.expect(typeof _.get(responseData, \"debtorAccount.iban\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorName` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorName\")){\n          if(responseData.debtorName!=null){\n            pm.expect(typeof _.get(responseData, \"debtorName\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorName` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorName\")){\n          if(responseData.creditorName!=null){\n            pm.expect(typeof _.get(responseData, \"creditorName\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAccount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAccount\")){\n          if(responseData.creditorAccount!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAccount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAccount.iban` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAccount.iban\")){\n          if(responseData.creditorAccount.iban!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAccount.iban\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `ultimateDebtor` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"ultimateDebtor\")){\n          if(responseData.ultimateDebtor!=null){\n            pm.expect(typeof _.get(responseData, \"ultimateDebtor\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `ultimateCreditor` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"ultimateCreditor\")){\n          if(responseData.ultimateCreditor!=null){\n            pm.expect(typeof _.get(responseData, \"ultimateCreditor\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorId\")){\n          if(responseData.debtorId!=null){\n            pm.expect(typeof _.get(responseData, \"debtorId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorId\")){\n          if(responseData.creditorId!=null){\n            pm.expect(typeof _.get(responseData, \"creditorId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAgent` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAgent\")){\n          if(responseData.creditorAgent!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAgent\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress\")){\n          if(responseData.creditorAddress!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.country` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.country\")){\n          if(responseData.creditorAddress.country!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.country\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.street` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.street\")){\n          if(responseData.creditorAddress.street!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.street\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.buildingNumber` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.buildingNumber\")){\n          if(responseData.creditorAddress.buildingNumber!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.buildingNumber\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.postalCode` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.postalCode\")){\n          if(responseData.creditorAddress.postalCode!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.postalCode\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.city` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.city\")){\n          if(responseData.creditorAddress.city!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.city\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `requestedExecutionDate` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"requestedExecutionDate\")){\n          if(responseData.requestedExecutionDate!=null){\n            pm.expect(typeof _.get(responseData, \"requestedExecutionDate\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('requestedExecutionDate format to be date-time',function(){\n                pm.expect(_.get(responseData, \"requestedExecutionDate\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `endToEndIdentification` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"endToEndIdentification\")){\n          if(responseData.endToEndIdentification!=null){\n            pm.expect(typeof _.get(responseData, \"endToEndIdentification\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `purposeCode` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"purposeCode\")){\n          if(responseData.purposeCode!=null){\n            pm.expect(typeof _.get(responseData, \"purposeCode\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationUnstructured` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationUnstructured\")){\n          if(responseData.remittanceInformationUnstructured!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationUnstructured\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured\")){\n          if(responseData.remittanceInformationStructured!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.reference` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.reference\")){\n          if(responseData.remittanceInformationStructured.reference!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.reference\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.referenceType` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.referenceType\")){\n          if(responseData.remittanceInformationStructured.referenceType!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.referenceType\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.referenceIssuer` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.referenceIssuer\")){\n          if(responseData.remittanceInformationStructured.referenceIssuer!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.referenceIssuer\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "56017574-5603-4f46-b27f-5e8d7ae3f8c6",
                          "name": "Post Authorisation",
                          "request": {
                            "name": "Post Authorisation",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "sepa-credit-transfers",
                                ":paymentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "e14daa85-f2b0-42ec-8719-c2e03f418cd7",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "body": {}
                              },
                              "status": "Created",
                              "code": 201,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"psuMessage\": \"ut voluptate consectet\",\n  \"authorisationId\": \"et Duis aute cillum anim\",\n  \"_links\": {\n    \"irure_14d\": {\n      \"href\": \"proident non\"\n    }\n  },\n  \"scaStatus\": \"officia amet sed\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "2d345fe2-10ff-4e9a-afb1-50bf9b55327c",
                              "name": "Unauthorized",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "body": {}
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/sepa-credit-transfers/:paymentId/authorisations for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "a6a04723-f4c0-47db-acc0-39a767b31571",
                          "name": "Get Authorisation",
                          "request": {
                            "name": "Get Authorisation",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "sepa-credit-transfers",
                                ":paymentId",
                                "authorisations",
                                ":authorisationId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{authorisationId}}",
                                  "key": "authorisationId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "91b12d88-c80a-46ad-b1a5-3ac4e54c5907",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations",
                                    ":authorisationId"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{authorisationId}}",
                                      "key": "authorisationId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"scaStatus\": \"sed Excepteur aute dolor\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/sepa-credit-transfers/:paymentId/authorisations/:authorisationId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `instructedAmount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount\")){\n          if(responseData.instructedAmount!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `instructedAmount.currency` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount.currency\")){\n          if(responseData.instructedAmount.currency!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount.currency\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `instructedAmount.amount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"instructedAmount.amount\")){\n          if(responseData.instructedAmount.amount!=null){\n            pm.expect(typeof _.get(responseData, \"instructedAmount.amount\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorAccount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorAccount\")){\n          if(responseData.debtorAccount!=null){\n            pm.expect(typeof _.get(responseData, \"debtorAccount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorAccount.iban` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorAccount.iban\")){\n          if(responseData.debtorAccount.iban!=null){\n            pm.expect(typeof _.get(responseData, \"debtorAccount.iban\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorName` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorName\")){\n          if(responseData.debtorName!=null){\n            pm.expect(typeof _.get(responseData, \"debtorName\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorName` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorName\")){\n          if(responseData.creditorName!=null){\n            pm.expect(typeof _.get(responseData, \"creditorName\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAccount` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAccount\")){\n          if(responseData.creditorAccount!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAccount\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAccount.iban` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAccount.iban\")){\n          if(responseData.creditorAccount.iban!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAccount.iban\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `ultimateDebtor` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"ultimateDebtor\")){\n          if(responseData.ultimateDebtor!=null){\n            pm.expect(typeof _.get(responseData, \"ultimateDebtor\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `ultimateCreditor` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"ultimateCreditor\")){\n          if(responseData.ultimateCreditor!=null){\n            pm.expect(typeof _.get(responseData, \"ultimateCreditor\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `debtorId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"debtorId\")){\n          if(responseData.debtorId!=null){\n            pm.expect(typeof _.get(responseData, \"debtorId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorId\")){\n          if(responseData.creditorId!=null){\n            pm.expect(typeof _.get(responseData, \"creditorId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAgent` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAgent\")){\n          if(responseData.creditorAgent!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAgent\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress\")){\n          if(responseData.creditorAddress!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.country` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.country\")){\n          if(responseData.creditorAddress.country!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.country\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.street` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.street\")){\n          if(responseData.creditorAddress.street!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.street\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.buildingNumber` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.buildingNumber\")){\n          if(responseData.creditorAddress.buildingNumber!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.buildingNumber\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.postalCode` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.postalCode\")){\n          if(responseData.creditorAddress.postalCode!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.postalCode\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `creditorAddress.city` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"creditorAddress.city\")){\n          if(responseData.creditorAddress.city!=null){\n            pm.expect(typeof _.get(responseData, \"creditorAddress.city\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `requestedExecutionDate` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"requestedExecutionDate\")){\n          if(responseData.requestedExecutionDate!=null){\n            pm.expect(typeof _.get(responseData, \"requestedExecutionDate\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('requestedExecutionDate format to be date-time',function(){\n                pm.expect(_.get(responseData, \"requestedExecutionDate\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `endToEndIdentification` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"endToEndIdentification\")){\n          if(responseData.endToEndIdentification!=null){\n            pm.expect(typeof _.get(responseData, \"endToEndIdentification\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `purposeCode` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"purposeCode\")){\n          if(responseData.purposeCode!=null){\n            pm.expect(typeof _.get(responseData, \"purposeCode\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationUnstructured` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationUnstructured\")){\n          if(responseData.remittanceInformationUnstructured!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationUnstructured\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured\")){\n          if(responseData.remittanceInformationStructured!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.reference` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.reference\")){\n          if(responseData.remittanceInformationStructured.reference!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.reference\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.referenceType` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.referenceType\")){\n          if(responseData.remittanceInformationStructured.referenceType!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.referenceType\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `remittanceInformationStructured.referenceIssuer` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"remittanceInformationStructured.referenceIssuer\")){\n          if(responseData.remittanceInformationStructured.referenceIssuer!=null){\n            pm.expect(typeof _.get(responseData, \"remittanceInformationStructured.referenceIssuer\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        }
                      ],
                      "event": []
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "c44e7653-9603-474f-ac80-9f56629574f0",
              "name": "pain.001-sepa-credit-transfers",
              "item": [
                {
                  "id": "5cc6072f-796a-42c6-a46b-1ac0c18ea56c",
                  "name": "Post Credit Transfer",
                  "request": {
                    "name": "Post Credit Transfer",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "payments",
                        "pain.001-sepa-credit-transfers"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-IP-Address",
                        "value": "{{PSU-IP-Address}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      }
                    ],
                    "method": "POST",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrCdtTrfInitn>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <InitgPty>\n        <Nm>(string)</Nm>\n        <Id>\n          <Item>\n          </Item>\n        </Id>\n      </InitgPty>\n    </GrpHdr>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Ccy>(string)</Ccy>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n      </DbtrAgt>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <Id>\n        </Id>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n    </PmtInf>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Ccy>(string)</Ccy>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n      </DbtrAgt>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <Id>\n        </Id>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n    </PmtInf>\n  </CstmrCdtTrfInitn>\n</element>",
                      "options": {
                        "raw": {
                          "language": "xml"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "2a1e07f1-407b-4957-bdbc-72bcaa36a538",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "pain.001-sepa-credit-transfers"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/xml"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/xml"
                        }
                      ],
                      "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <psuMessage>(string)</psuMessage>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <_links>\n  </_links>\n</element>",
                      "cookie": [],
                      "_postman_previewlanguage": "xml"
                    },
                    {
                      "id": "b67be0ec-da5b-40cf-ae10-7600b0f3e3cb",
                      "name": "Bad Request",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "pain.001-sepa-credit-transfers"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": [],
                      "_postman_previewlanguage": "text"
                    },
                    {
                      "id": "5cd3c614-3c1c-44bc-ae3d-50917374d1c4",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "pain.001-sepa-credit-transfers"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/xml"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/xml"
                        }
                      ],
                      "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <psuMessage>(string)</psuMessage>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <_links>\n  </_links>\n</element>",
                      "cookie": [],
                      "_postman_previewlanguage": "xml"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/pain.001-sepa-credit-transfers for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 400){\n    pm.test(\"Bad Request\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Bad Request\");});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "4feebc84-a360-4b28-9d13-9741092176d3",
                  "name": "{paymentId}",
                  "item": [
                    {
                      "id": "cb65c528-09f8-4b92-822b-5132f0b06d84",
                      "name": "Get Credit Transfer",
                      "request": {
                        "name": "Get Credit Transfer",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "pain.001-sepa-credit-transfers",
                            ":paymentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/xml"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "0f434bb0-6393-4511-b468-31f1383a59b1",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrCdtTrfInitn>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <InitgPty>\n        <Nm>(string)</Nm>\n        <Id>\n          <Item>\n          </Item>\n        </Id>\n      </InitgPty>\n    </GrpHdr>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Ccy>(string)</Ccy>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n      </DbtrAgt>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <Id>\n        </Id>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n    </PmtInf>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Ccy>(string)</Ccy>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n      </DbtrAgt>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <Id>\n        </Id>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n    </PmtInf>\n  </CstmrCdtTrfInitn>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/pain.001-sepa-credit-transfers/:paymentId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "cf063ee8-41bb-42fa-b1ea-06eb5d0ada5c",
                      "name": "Delete Credit Transfer",
                      "request": {
                        "name": "Delete Credit Transfer",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "pain.001-sepa-credit-transfers",
                            ":paymentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "81dc9bf7-d22a-49ab-823f-ca3237e6422c",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "No Content",
                          "code": 204,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"transactionStatus\": \"ipsum culpa eu dolor\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "e780c3c6-d880-4e66-b699-9f347b7f59c5",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/pain.001-sepa-credit-transfers/:paymentId for http method type delete in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 204){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"No Content\");\n      pm.test('Response has the `transactionStatus` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"transactionStatus\")){\n          if(responseData.transactionStatus!=null){\n            pm.expect(typeof _.get(responseData, \"transactionStatus\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "32d5778b-c6d6-4abd-b630-10059b0af580",
                      "name": "Get Credit Transfer Status",
                      "request": {
                        "name": "Get Credit Transfer Status",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "payments",
                            "pain.001-sepa-credit-transfers",
                            ":paymentId",
                            "status"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/xml"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "434039ea-53c6-49cc-b80b-a46cc9ec4c95",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrPmtStsRpt>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <Item>\n        <FinInstnId>\n          <BIC>(string)</BIC>\n        </FinInstnId>\n      </Item>\n      <ItemElementName>(integer)</ItemElementName>\n    </GrpHdr>\n    <OrgnlGrpInfAndSts>\n      <OrgnlMsgId>(string)</OrgnlMsgId>\n      <OrgnlMsgNmId>(string)</OrgnlMsgNmId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <GrpSts>(integer)</GrpSts>\n      <GrpStsSpecified>(boolean)</GrpStsSpecified>\n      <StsRsnInf>\n        <Orgtr>\n        </Orgtr>\n        <Rsn>\n        </Rsn>\n        <AddtlInf>(string)</AddtlInf>\n        <AddtlInf>(string)</AddtlInf>\n      </StsRsnInf>\n      <StsRsnInf>\n        <Orgtr>\n        </Orgtr>\n        <Rsn>\n        </Rsn>\n        <AddtlInf>(string)</AddtlInf>\n        <AddtlInf>(string)</AddtlInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n    </OrgnlGrpInfAndSts>\n    <OrgnlPmtInfAndSts>\n      <OrgnlPmtInfId>(string)</OrgnlPmtInfId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <PmtInfSts>(integer)</PmtInfSts>\n      <PmtInfStsSpecified>(boolean)</PmtInfStsSpecified>\n      <StsRsnInf>\n      </StsRsnInf>\n      <StsRsnInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n    </OrgnlPmtInfAndSts>\n    <OrgnlPmtInfAndSts>\n      <OrgnlPmtInfId>(string)</OrgnlPmtInfId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <PmtInfSts>(integer)</PmtInfSts>\n      <PmtInfStsSpecified>(boolean)</PmtInfStsSpecified>\n      <StsRsnInf>\n      </StsRsnInf>\n      <StsRsnInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n    </OrgnlPmtInfAndSts>\n  </CstmrPmtStsRpt>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        },
                        {
                          "id": "a958396e-71fb-47d5-907f-0a1ce1baa2c8",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <psuMessage>(string)</psuMessage>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <_links>\n  </_links>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        },
                        {
                          "id": "eb2ca0cc-3197-48a1-827c-dbd78b41c82a",
                          "name": "Forbidden",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <psuMessage>(string)</psuMessage>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <_links>\n  </_links>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/pain.001-sepa-credit-transfers/:paymentId/status for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");});\n}\n\nif (pm.response.code == 403){\n    pm.test(\"Forbidden\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Forbidden\");});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "c2e93992-ce76-4b01-a7c0-eccc6a77c8f6",
                      "name": "authorisations",
                      "item": [
                        {
                          "id": "aa8f0bff-d8c9-4a93-82fe-42af506580de",
                          "name": "Get Authorisations",
                          "request": {
                            "name": "Get Authorisations",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "GET",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "18282b86-6df2-4fdb-917f-2a3359deb0cb",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "pain.001-sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"authorisationIds\": [\n    \"sed consequat \",\n    \"quis\"\n  ]\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/pain.001-sepa-credit-transfers/:paymentId/authorisations for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "927f3bea-a81f-4c84-b5aa-e213a3e61246",
                          "name": "Post Authorisation",
                          "request": {
                            "name": "Post Authorisation",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "POST",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "5f3cefab-bf5c-4f3d-aa82-828d8811495c",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "pain.001-sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "POST",
                                "body": {}
                              },
                              "status": "Created",
                              "code": 201,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"psuMessage\": \"ut voluptate consectet\",\n  \"authorisationId\": \"et Duis aute cillum anim\",\n  \"_links\": {\n    \"irure_14d\": {\n      \"href\": \"proident non\"\n    }\n  },\n  \"scaStatus\": \"officia amet sed\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "33abba7b-7d93-4d3d-bc1f-5fe7be6d83c9",
                              "name": "Unauthorized",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "pain.001-sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "POST",
                                "body": {}
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/pain.001-sepa-credit-transfers/:paymentId/authorisations for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "c7a0fe94-4be9-4a06-9629-91a09d7dac0f",
                          "name": "Get Authorisation",
                          "request": {
                            "name": "Get Authorisation",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "authorisations",
                                ":authorisationId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{authorisationId}}",
                                  "key": "authorisationId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "GET",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "c2cecb16-8186-421a-bacf-effd1626a642",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "payments",
                                    "pain.001-sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations",
                                    ":authorisationId"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{authorisationId}}",
                                      "key": "authorisationId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"scaStatus\": \"sed Excepteur aute dolor\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/payments/pain.001-sepa-credit-transfers/:paymentId/authorisations/:authorisationId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        }
                      ],
                      "event": []
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        {
          "id": "cd73a889-3ac0-464b-a9d9-a35aaae9afb8",
          "name": "bulk-payments",
          "item": [
            {
              "id": "9fe04fab-ac9d-40dc-8f39-006e2ded1b35",
              "name": "austrian-cross-border-credit-transfer",
              "item": [
                {
                  "id": "4917e05a-edd0-43ac-946d-73d09223b675",
                  "name": "Post Bulk Credit Transfer",
                  "request": {
                    "name": "Post Bulk Credit Transfer",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "bulk-payments",
                        "austrian-cross-border-credit-transfer"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-IP-Address",
                        "value": "{{PSU-IP-Address}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrCdtTrfInitn>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <Authstn>\n        <Item>\n        </Item>\n      </Authstn>\n      <Authstn>\n        <Item>\n        </Item>\n      </Authstn>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <InitgPty>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n          <AdrTp>(integer)</AdrTp>\n          <AdrTpSpecified>(boolean)</AdrTpSpecified>\n          <Dept>(string)</Dept>\n          <SubDept>(string)</SubDept>\n          <StrtNm>(string)</StrtNm>\n          <BldgNb>(string)</BldgNb>\n          <PstCd>(string)</PstCd>\n          <TwnNm>(string)</TwnNm>\n          <CtrySubDvsn>(string)</CtrySubDvsn>\n          <Ctry>(string)</Ctry>\n        </PstlAdr>\n        <Id>\n          <Item>\n          </Item>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n          <NmPrfx>(integer)</NmPrfx>\n          <NmPrfxSpecified>(boolean)</NmPrfxSpecified>\n          <Nm>(string)</Nm>\n          <PhneNb>(string)</PhneNb>\n          <MobNb>(string)</MobNb>\n          <FaxNb>(string)</FaxNb>\n          <EmailAdr>(string)</EmailAdr>\n          <Othr>(string)</Othr>\n        </CtctDtls>\n      </InitgPty>\n      <FwdgAgt>\n        <FinInstnId>\n          <BIC>(string)</BIC>\n          <Nm>(string)</Nm>\n        </FinInstnId>\n        <BrnchId>\n          <Id>(string)</Id>\n          <Nm>(string)</Nm>\n        </BrnchId>\n      </FwdgAgt>\n    </GrpHdr>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <LclInstrm>\n        </LclInstrm>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <PoolgAdjstmntDt>(string)</PoolgAdjstmntDt>\n      <PoolgAdjstmntDtSpecified>(boolean)</PoolgAdjstmntDtSpecified>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </DbtrAgt>\n      <DbtrAgtAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAgtAcct>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <ChrgsAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </ChrgsAcct>\n      <ChrgsAcctAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </ChrgsAcctAgt>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n    </PmtInf>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <LclInstrm>\n        </LclInstrm>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <PoolgAdjstmntDt>(string)</PoolgAdjstmntDt>\n      <PoolgAdjstmntDtSpecified>(boolean)</PoolgAdjstmntDtSpecified>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </DbtrAgt>\n      <DbtrAgtAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAgtAcct>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <ChrgsAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </ChrgsAcct>\n      <ChrgsAcctAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </ChrgsAcctAgt>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n    </PmtInf>\n  </CstmrCdtTrfInitn>\n</element>",
                      "options": {
                        "raw": {
                          "language": "xml"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "836e8c1a-93ea-4b96-a2a4-a0690ed5d679",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "austrian-cross-border-credit-transfer"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "b496e0ec-ed3d-458c-a86e-eaadd96989b7",
                      "name": "Bad Request",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "austrian-cross-border-credit-transfer"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": [],
                      "_postman_previewlanguage": "text"
                    },
                    {
                      "id": "d5e94213-4be9-41a3-84b3-a859ac8ec3c7",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "austrian-cross-border-credit-transfer"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/austrian-cross-border-credit-transfer for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 400){\n    pm.test(\"Bad Request\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Bad Request\");});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "924f79f5-cefb-4f03-8390-a3ef62c034f5",
                  "name": "{paymentId}",
                  "item": [
                    {
                      "id": "3e58e10c-30db-4b89-9e0f-9d34d79e4f84",
                      "name": "Get Bulk Credit Transfer",
                      "request": {
                        "name": "Get Bulk Credit Transfer",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "austrian-cross-border-credit-transfer",
                            ":paymentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/xml"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "ee4d2c16-f439-42ca-960d-7d7ab828e156",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrCdtTrfInitn>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <Authstn>\n        <Item>\n        </Item>\n      </Authstn>\n      <Authstn>\n        <Item>\n        </Item>\n      </Authstn>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <InitgPty>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n          <AdrTp>(integer)</AdrTp>\n          <AdrTpSpecified>(boolean)</AdrTpSpecified>\n          <Dept>(string)</Dept>\n          <SubDept>(string)</SubDept>\n          <StrtNm>(string)</StrtNm>\n          <BldgNb>(string)</BldgNb>\n          <PstCd>(string)</PstCd>\n          <TwnNm>(string)</TwnNm>\n          <CtrySubDvsn>(string)</CtrySubDvsn>\n          <Ctry>(string)</Ctry>\n        </PstlAdr>\n        <Id>\n          <Item>\n          </Item>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n          <NmPrfx>(integer)</NmPrfx>\n          <NmPrfxSpecified>(boolean)</NmPrfxSpecified>\n          <Nm>(string)</Nm>\n          <PhneNb>(string)</PhneNb>\n          <MobNb>(string)</MobNb>\n          <FaxNb>(string)</FaxNb>\n          <EmailAdr>(string)</EmailAdr>\n          <Othr>(string)</Othr>\n        </CtctDtls>\n      </InitgPty>\n      <FwdgAgt>\n        <FinInstnId>\n          <BIC>(string)</BIC>\n          <Nm>(string)</Nm>\n        </FinInstnId>\n        <BrnchId>\n          <Id>(string)</Id>\n          <Nm>(string)</Nm>\n        </BrnchId>\n      </FwdgAgt>\n    </GrpHdr>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <LclInstrm>\n        </LclInstrm>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <PoolgAdjstmntDt>(string)</PoolgAdjstmntDt>\n      <PoolgAdjstmntDtSpecified>(boolean)</PoolgAdjstmntDtSpecified>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </DbtrAgt>\n      <DbtrAgtAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAgtAcct>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <ChrgsAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </ChrgsAcct>\n      <ChrgsAcctAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </ChrgsAcctAgt>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n    </PmtInf>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <CtrlSumSpecified>(boolean)</CtrlSumSpecified>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <LclInstrm>\n        </LclInstrm>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <PoolgAdjstmntDt>(string)</PoolgAdjstmntDt>\n      <PoolgAdjstmntDtSpecified>(boolean)</PoolgAdjstmntDtSpecified>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </DbtrAgt>\n      <DbtrAgtAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </DbtrAgtAcct>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n        <CtryOfRes>(string)</CtryOfRes>\n        <CtctDtls>\n        </CtctDtls>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <ChrgsAcct>\n        <Id>\n        </Id>\n        <Tp>\n        </Tp>\n        <Ccy>(string)</Ccy>\n        <Nm>(string)</Nm>\n      </ChrgsAcct>\n      <ChrgsAcctAgt>\n        <FinInstnId>\n        </FinInstnId>\n        <BrnchId>\n        </BrnchId>\n      </ChrgsAcctAgt>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n        <InstrForDbtrAgt>(string)</InstrForDbtrAgt>\n      </CdtTrfTxInf>\n    </PmtInf>\n  </CstmrCdtTrfInitn>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/austrian-cross-border-credit-transfer/:paymentId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.Authstn` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.GrpHdr.Authstn` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\");  \n          let AuthstnArray = _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\", \"\");  \n          for (let i = 0; i < AuthstnArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.GrpHdr.Authstn' has 'Item' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i]).to.have.nested.property(\"Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i].Item != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.GrpHdr.Authstn[${i}].Item`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSumSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSumSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSumSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDtSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDtSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDtSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDtSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgtAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgtAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgtAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgtAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcctAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcctAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcctAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcctAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "20d63941-fed6-4ffe-a0d8-7e263c363547",
                      "name": "Delete Bulk Credit Transfer",
                      "request": {
                        "name": "Delete Bulk Credit Transfer",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "austrian-cross-border-credit-transfer",
                            ":paymentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "1b80340a-890f-4af4-aafa-ec88c8f1fee2",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "No Content",
                          "code": 204,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"transactionStatus\": \"ipsum culpa eu dolor\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "2e55925e-ffb4-4d6c-ae51-9852f4f58848",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/austrian-cross-border-credit-transfer/:paymentId for http method type delete in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 204){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"No Content\");\n      pm.test('Response has the `transactionStatus` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"transactionStatus\")){\n          if(responseData.transactionStatus!=null){\n            pm.expect(typeof _.get(responseData, \"transactionStatus\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "5e28ce06-4adb-455c-b338-89cc48d5afa0",
                      "name": "Get Bulk Credit Transfer Status",
                      "request": {
                        "name": "Get Bulk Credit Transfer Status",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "austrian-cross-border-credit-transfer",
                            ":paymentId",
                            "status"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/xml"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "945fe8eb-7a30-4f33-ad04-1a06040e38c3",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrPmtStsRpt>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <Item>\n        <FinInstnId>\n          <BIC>(string)</BIC>\n        </FinInstnId>\n      </Item>\n      <ItemElementName>(integer)</ItemElementName>\n    </GrpHdr>\n    <OrgnlGrpInfAndSts>\n      <OrgnlMsgId>(string)</OrgnlMsgId>\n      <OrgnlMsgNmId>(string)</OrgnlMsgNmId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <GrpSts>(integer)</GrpSts>\n      <GrpStsSpecified>(boolean)</GrpStsSpecified>\n      <StsRsnInf>\n        <Orgtr>\n        </Orgtr>\n        <Rsn>\n        </Rsn>\n        <AddtlInf>(string)</AddtlInf>\n        <AddtlInf>(string)</AddtlInf>\n      </StsRsnInf>\n      <StsRsnInf>\n        <Orgtr>\n        </Orgtr>\n        <Rsn>\n        </Rsn>\n        <AddtlInf>(string)</AddtlInf>\n        <AddtlInf>(string)</AddtlInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n    </OrgnlGrpInfAndSts>\n    <OrgnlPmtInfAndSts>\n      <OrgnlPmtInfId>(string)</OrgnlPmtInfId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <PmtInfSts>(integer)</PmtInfSts>\n      <PmtInfStsSpecified>(boolean)</PmtInfStsSpecified>\n      <StsRsnInf>\n      </StsRsnInf>\n      <StsRsnInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n    </OrgnlPmtInfAndSts>\n    <OrgnlPmtInfAndSts>\n      <OrgnlPmtInfId>(string)</OrgnlPmtInfId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <PmtInfSts>(integer)</PmtInfSts>\n      <PmtInfStsSpecified>(boolean)</PmtInfStsSpecified>\n      <StsRsnInf>\n      </StsRsnInf>\n      <StsRsnInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n    </OrgnlPmtInfAndSts>\n  </CstmrPmtStsRpt>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        },
                        {
                          "id": "0ebb7f07-3ada-4f14-8ebb-e64f2851cdb0",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <psuMessage>(string)</psuMessage>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <_links>\n  </_links>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        },
                        {
                          "id": "ea0e3f7b-4607-4dcf-9c1a-3cdcf3d4c325",
                          "name": "Forbidden",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <psuMessage>(string)</psuMessage>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <_links>\n  </_links>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/austrian-cross-border-credit-transfer/:paymentId/status for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.Authstn` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.GrpHdr.Authstn` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\");  \n          let AuthstnArray = _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\", \"\");  \n          for (let i = 0; i < AuthstnArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.GrpHdr.Authstn' has 'Item' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i]).to.have.nested.property(\"Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i].Item != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.GrpHdr.Authstn[${i}].Item`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSumSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSumSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSumSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDtSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDtSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDtSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDtSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgtAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgtAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgtAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgtAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcctAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcctAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcctAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcctAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");});\n}\n\nif (pm.response.code == 403){\n    pm.test(\"Forbidden\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Forbidden\");});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "a260af4f-0bd1-44e1-b11b-7635b049f8fb",
                      "name": "authorisations",
                      "item": [
                        {
                          "id": "62e5ce8e-1dbc-4c38-9f82-643e6857edcc",
                          "name": "Get Bulk Authorisations",
                          "request": {
                            "name": "Get Bulk Authorisations",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "GET",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "80abb361-02e3-48dc-98b5-d7f6991d60b0",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "bulk-payments",
                                    "austrian-cross-border-credit-transfer",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"authorisationIds\": [\n    \"sed consequat \",\n    \"quis\"\n  ]\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/austrian-cross-border-credit-transfer/:paymentId/authorisations for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.Authstn` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.GrpHdr.Authstn` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\");  \n          let AuthstnArray = _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\", \"\");  \n          for (let i = 0; i < AuthstnArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.GrpHdr.Authstn' has 'Item' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i]).to.have.nested.property(\"Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i].Item != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.GrpHdr.Authstn[${i}].Item`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSumSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSumSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSumSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDtSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDtSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDtSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDtSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgtAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgtAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgtAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgtAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcctAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcctAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcctAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcctAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "a0b6b1d1-6603-4397-a872-3d7b67b29dee",
                          "name": "Post Bulk Authorisation",
                          "request": {
                            "name": "Post Bulk Authorisation",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "POST",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "260605ea-fd40-4437-97e6-586392ef3f69",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "bulk-payments",
                                    "austrian-cross-border-credit-transfer",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "POST",
                                "body": {}
                              },
                              "status": "Created",
                              "code": 201,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"psuMessage\": \"ut voluptate consectet\",\n  \"authorisationId\": \"et Duis aute cillum anim\",\n  \"_links\": {\n    \"irure_14d\": {\n      \"href\": \"proident non\"\n    }\n  },\n  \"scaStatus\": \"officia amet sed\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "a9da82d5-5747-4777-b4d2-ccc1dfdd44d9",
                              "name": "Unauthorized",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "bulk-payments",
                                    "austrian-cross-border-credit-transfer",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "POST",
                                "body": {}
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/austrian-cross-border-credit-transfer/:paymentId/authorisations for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "925de3fa-fd6b-4ed6-8201-2a0737b9e785",
                          "name": "Get Bulk Authorisation",
                          "request": {
                            "name": "Get Bulk Authorisation",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "austrian-cross-border-credit-transfer",
                                ":paymentId",
                                "authorisations",
                                ":authorisationId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{authorisationId}}",
                                  "key": "authorisationId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "GET",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "7a008ff5-6348-428d-866d-8a5e2e9e24cf",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "bulk-payments",
                                    "austrian-cross-border-credit-transfer",
                                    ":paymentId",
                                    "authorisations",
                                    ":authorisationId"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{authorisationId}}",
                                      "key": "authorisationId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"scaStatus\": \"sed Excepteur aute dolor\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/austrian-cross-border-credit-transfer/:paymentId/authorisations/:authorisationId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.Authstn` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.GrpHdr.Authstn` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.Authstn\");  \n          let AuthstnArray = _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.Authstn\", \"\");  \n          for (let i = 0; i < AuthstnArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.GrpHdr.Authstn' has 'Item' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i]).to.have.nested.property(\"Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.Authstn[i].Item != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.GrpHdr.Authstn[${i}].Item`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSumSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtryOfRes\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfx\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.NmPrfxSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.PhneNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.MobNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.FaxNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.EmailAdr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.CtctDtls.Othr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.BIC\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.ClrSysId.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.ClrSysMmbId.MmbId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.Item\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.SchmeNm.ItemElementName\", \"\")).to.include.oneOf([\"0\",\"1\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.FinInstnId.Othr.Issr\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Id\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp!=null){\n              pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n \n        pm.test('CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTp\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]);\n        })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrTpSpecified\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Dept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.SubDept\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.StrtNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.BldgNb\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.PstCd\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.TwnNm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.CtrySubDvsn\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.Ctry\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\")){\n            if(responseData.CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.FwdgAgt.BrnchId.PstlAdr.AdrLine\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSumSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSumSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSumSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSumSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PoolgAdjstmntDtSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PoolgAdjstmntDtSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PoolgAdjstmntDtSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PoolgAdjstmntDtSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgtAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgtAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgtAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgtAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\",\"1\",\"2\",\"3\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgsAcctAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgsAcctAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgsAcctAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgsAcctAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        }
                      ],
                      "event": []
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "996dbbfa-137f-46a5-87f8-b39b979d9634",
              "name": "pain.001-sepa-credit-transfers",
              "item": [
                {
                  "id": "c1360057-394e-4eeb-b569-acd4857656b6",
                  "name": "Post Bulk Credit Transfer",
                  "request": {
                    "name": "Post Bulk Credit Transfer",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "bulk-payments",
                        "pain.001-sepa-credit-transfers"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-IP-Address",
                        "value": "{{PSU-IP-Address}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrCdtTrfInitn>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <InitgPty>\n        <Nm>(string)</Nm>\n        <Id>\n          <Item>\n          </Item>\n        </Id>\n      </InitgPty>\n    </GrpHdr>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Ccy>(string)</Ccy>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n      </DbtrAgt>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <Id>\n        </Id>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n    </PmtInf>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Ccy>(string)</Ccy>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n      </DbtrAgt>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <Id>\n        </Id>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n    </PmtInf>\n  </CstmrCdtTrfInitn>\n</element>",
                      "options": {
                        "raw": {
                          "language": "xml"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "703064ca-80b7-4dec-8909-8aa62a0219ca",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "pain.001-sepa-credit-transfers"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "21252814-9718-4800-b430-cc8c6c2f2296",
                      "name": "Bad Request",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "pain.001-sepa-credit-transfers"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": [],
                      "_postman_previewlanguage": "text"
                    },
                    {
                      "id": "20364d7c-008f-4967-83e9-e5fdff647c21",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "pain.001-sepa-credit-transfers"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-IP-Address",
                            "value": "{{PSU-IP-Address}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/pain.001-sepa-credit-transfers for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 400){\n    pm.test(\"Bad Request\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Bad Request\");});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "1095ba69-f896-4e99-b074-988e52129b61",
                  "name": "{paymentId}",
                  "item": [
                    {
                      "id": "bfbdae64-fa06-4256-a38d-836557757b6c",
                      "name": "Get Bulk Credit Transfer",
                      "request": {
                        "name": "Get Bulk Credit Transfer",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "pain.001-sepa-credit-transfers",
                            ":paymentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/xml"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "fee2d32a-f5bd-487c-91d1-4021ff055d85",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrCdtTrfInitn>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <InitgPty>\n        <Nm>(string)</Nm>\n        <Id>\n          <Item>\n          </Item>\n        </Id>\n      </InitgPty>\n    </GrpHdr>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Ccy>(string)</Ccy>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n      </DbtrAgt>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <Id>\n        </Id>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n    </PmtInf>\n    <PmtInf>\n      <PmtInfId>(string)</PmtInfId>\n      <PmtMtd>(integer)</PmtMtd>\n      <BtchBookg>(boolean)</BtchBookg>\n      <BtchBookgSpecified>(boolean)</BtchBookgSpecified>\n      <NbOfTxs>(string)</NbOfTxs>\n      <CtrlSum>(number)</CtrlSum>\n      <PmtTpInf>\n        <InstrPrty>(integer)</InstrPrty>\n        <InstrPrtySpecified>(boolean)</InstrPrtySpecified>\n        <SvcLvl>\n        </SvcLvl>\n        <CtgyPurp>\n        </CtgyPurp>\n      </PmtTpInf>\n      <ReqdExctnDt>(string)</ReqdExctnDt>\n      <Dbtr>\n        <Nm>(string)</Nm>\n        <PstlAdr>\n        </PstlAdr>\n        <Id>\n        </Id>\n      </Dbtr>\n      <DbtrAcct>\n        <Id>\n        </Id>\n        <Ccy>(string)</Ccy>\n      </DbtrAcct>\n      <DbtrAgt>\n        <FinInstnId>\n        </FinInstnId>\n      </DbtrAgt>\n      <UltmtDbtr>\n        <Nm>(string)</Nm>\n        <Id>\n        </Id>\n      </UltmtDbtr>\n      <ChrgBr>(integer)</ChrgBr>\n      <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n      <CdtTrfTxInf>\n        <ChrgBr>(integer)</ChrgBr>\n        <ChrgBrSpecified>(boolean)</ChrgBrSpecified>\n      </CdtTrfTxInf>\n    </PmtInf>\n  </CstmrCdtTrfInitn>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/pain.001-sepa-credit-transfers/:paymentId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "a04bc634-548b-4892-9924-ebec2492cde4",
                      "name": "Delete Bulk Credit Transfer",
                      "request": {
                        "name": "Delete Bulk Credit Transfer",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "pain.001-sepa-credit-transfers",
                            ":paymentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "4cdc5f5f-47f5-44df-8bfc-f10c41b28004",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "No Content",
                          "code": 204,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"transactionStatus\": \"ipsum culpa eu dolor\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "4cc378b8-db41-4fae-9b77-d50a8515338e",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/pain.001-sepa-credit-transfers/:paymentId for http method type delete in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 204){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"No Content\");\n      pm.test('Response has the `transactionStatus` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"transactionStatus\")){\n          if(responseData.transactionStatus!=null){\n            pm.expect(typeof _.get(responseData, \"transactionStatus\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "bc93a545-a2ef-4b71-aa90-c37bb1fe976a",
                      "name": "Get Bulk Credit Transfer Status",
                      "request": {
                        "name": "Get Bulk Credit Transfer Status",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "bulk-payments",
                            "pain.001-sepa-credit-transfers",
                            ":paymentId",
                            "status"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{paymentId}}",
                              "key": "paymentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/xml"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "bd7a6728-87f5-49b6-b68d-4d40162cff76",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <CstmrPmtStsRpt>\n    <GrpHdr>\n      <MsgId>(string)</MsgId>\n      <CreDtTm>(string)</CreDtTm>\n      <Item>\n        <FinInstnId>\n          <BIC>(string)</BIC>\n        </FinInstnId>\n      </Item>\n      <ItemElementName>(integer)</ItemElementName>\n    </GrpHdr>\n    <OrgnlGrpInfAndSts>\n      <OrgnlMsgId>(string)</OrgnlMsgId>\n      <OrgnlMsgNmId>(string)</OrgnlMsgNmId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <GrpSts>(integer)</GrpSts>\n      <GrpStsSpecified>(boolean)</GrpStsSpecified>\n      <StsRsnInf>\n        <Orgtr>\n        </Orgtr>\n        <Rsn>\n        </Rsn>\n        <AddtlInf>(string)</AddtlInf>\n        <AddtlInf>(string)</AddtlInf>\n      </StsRsnInf>\n      <StsRsnInf>\n        <Orgtr>\n        </Orgtr>\n        <Rsn>\n        </Rsn>\n        <AddtlInf>(string)</AddtlInf>\n        <AddtlInf>(string)</AddtlInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n    </OrgnlGrpInfAndSts>\n    <OrgnlPmtInfAndSts>\n      <OrgnlPmtInfId>(string)</OrgnlPmtInfId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <PmtInfSts>(integer)</PmtInfSts>\n      <PmtInfStsSpecified>(boolean)</PmtInfStsSpecified>\n      <StsRsnInf>\n      </StsRsnInf>\n      <StsRsnInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n    </OrgnlPmtInfAndSts>\n    <OrgnlPmtInfAndSts>\n      <OrgnlPmtInfId>(string)</OrgnlPmtInfId>\n      <OrgnlNbOfTxs>(string)</OrgnlNbOfTxs>\n      <OrgnlCtrlSum>(number)</OrgnlCtrlSum>\n      <OrgnlCtrlSumSpecified>(boolean)</OrgnlCtrlSumSpecified>\n      <PmtInfSts>(integer)</PmtInfSts>\n      <PmtInfStsSpecified>(boolean)</PmtInfStsSpecified>\n      <StsRsnInf>\n      </StsRsnInf>\n      <StsRsnInf>\n      </StsRsnInf>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <NbOfTxsPerSts>\n        <DtldNbOfTxs>(string)</DtldNbOfTxs>\n        <DtldSts>(integer)</DtldSts>\n        <DtldCtrlSum>(number)</DtldCtrlSum>\n        <DtldCtrlSumSpecified>(boolean)</DtldCtrlSumSpecified>\n      </NbOfTxsPerSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n      <TxInfAndSts>\n        <StsId>(string)</StsId>\n        <OrgnlInstrId>(string)</OrgnlInstrId>\n        <OrgnlEndToEndId>(string)</OrgnlEndToEndId>\n        <TxSts>(integer)</TxSts>\n        <TxStsSpecified>(boolean)</TxStsSpecified>\n      </TxInfAndSts>\n    </OrgnlPmtInfAndSts>\n  </CstmrPmtStsRpt>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        },
                        {
                          "id": "d907277c-50b5-4ba2-856d-81fbdaa006ff",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <psuMessage>(string)</psuMessage>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <_links>\n  </_links>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        },
                        {
                          "id": "ec600440-c3c3-4d9d-ba0f-75b46cbfb30c",
                          "name": "Forbidden",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "status"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/xml"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/xml"
                            }
                          ],
                          "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <psuMessage>(string)</psuMessage>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <tppMessages>\n    <category>(string)</category>\n    <code>(string)</code>\n    <path>(string)</path>\n    <text>(string)</text>\n  </tppMessages>\n  <_links>\n  </_links>\n</element>",
                          "cookie": [],
                          "_postman_previewlanguage": "xml"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/pain.001-sepa-credit-transfers/:paymentId/status for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");});\n}\n\nif (pm.response.code == 403){\n    pm.test(\"Forbidden\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Forbidden\");});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "a60a22e5-33c9-424a-9f6b-b6d11c0a90c9",
                      "name": "authorisations",
                      "item": [
                        {
                          "id": "e31179f6-e5c7-4c5f-9d0b-1f2ea9168efb",
                          "name": "Get Bulk Authorisations",
                          "request": {
                            "name": "Get Bulk Authorisations",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "GET",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "f961df58-157d-4f58-a965-77587d6f24dd",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "bulk-payments",
                                    "pain.001-sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"authorisationIds\": [\n    \"sed consequat \",\n    \"quis\"\n  ]\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/pain.001-sepa-credit-transfers/:paymentId/authorisations for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "8b341426-123f-4968-a244-f306ddfc81a6",
                          "name": "Post Bulk Authorisation",
                          "request": {
                            "name": "Post Bulk Authorisation",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "POST",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "db741113-ae8d-4063-a4df-aa5e87baa76a",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "bulk-payments",
                                    "pain.001-sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "POST",
                                "body": {}
                              },
                              "status": "Created",
                              "code": 201,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"psuMessage\": \"ut voluptate consectet\",\n  \"authorisationId\": \"et Duis aute cillum anim\",\n  \"_links\": {\n    \"irure_14d\": {\n      \"href\": \"proident non\"\n    }\n  },\n  \"scaStatus\": \"officia amet sed\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "0cb2e10f-dbcc-46a3-8ce6-f1e73c0b4f32",
                              "name": "Unauthorized",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "bulk-payments",
                                    "pain.001-sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "POST",
                                "body": {}
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/pain.001-sepa-credit-transfers/:paymentId/authorisations for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "e58c11d8-667f-4339-b8e5-88699883316b",
                          "name": "Get Bulk Authorisation",
                          "request": {
                            "name": "Get Bulk Authorisation",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "bulk-payments",
                                "pain.001-sepa-credit-transfers",
                                ":paymentId",
                                "authorisations",
                                ":authorisationId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{paymentId}}",
                                  "key": "paymentId",
                                  "description": "(Required) "
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{authorisationId}}",
                                  "key": "authorisationId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "GET",
                            "auth": null
                          },
                          "response": [
                            {
                              "id": "959b6848-1f25-4e1d-9ba9-68c3c0438fa5",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "bulk-payments",
                                    "pain.001-sepa-credit-transfers",
                                    ":paymentId",
                                    "authorisations",
                                    ":authorisationId"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{paymentId}}",
                                      "key": "paymentId",
                                      "description": "(Required) "
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{authorisationId}}",
                                      "key": "authorisationId",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "Content-Type",
                                    "value": "elit nostrud minim"
                                  },
                                  {
                                    "disabled": false,
                                    "description": "(Required) ",
                                    "key": "PSU-ID",
                                    "value": "{{PSU-ID}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "disabled": false,
                                  "description": "X-Request-ID",
                                  "key": "X-Request-ID",
                                  "value": "{{X-Request-ID}}"
                                },
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"scaStatus\": \"sed Excepteur aute dolor\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/bulk-payments/pain.001-sepa-credit-transfers/:paymentId/authorisations/:authorisationId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `CstmrCdtTrfInitn` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn\")){\n          if(responseData.CstmrCdtTrfInitn!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.MsgId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.MsgId\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.MsgId!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.MsgId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CreDtTm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CreDtTm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CreDtTm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n  \n            pm.test('CstmrCdtTrfInitn.GrpHdr.CreDtTm format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CreDtTm\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.NbOfTxs` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.NbOfTxs!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.NbOfTxs\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.CtrlSum` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.CtrlSum!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.CtrlSum\", \"\")).to.equal(\"number\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Nm\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\")){\n          if(responseData.CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item!=null){\n            pm.expect(typeof _.get(responseData, \"CstmrCdtTrfInitn.GrpHdr.InitgPty.Id.Item\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `CstmrCdtTrfInitn.PmtInf` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `CstmrCdtTrfInitn.PmtInf` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"CstmrCdtTrfInitn.PmtInf\");  \n          let PmtInfArray = _.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\");  \n          for (let i = 0; i < PmtInfArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtInfId' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtInfId\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtInfId != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtInfId`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtMtd' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtMtd\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtMtd != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtMtd`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookg' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookg\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookg != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookg`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'BtchBookgSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"BtchBookgSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].BtchBookgSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].BtchBookgSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'NbOfTxs' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"NbOfTxs\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].NbOfTxs != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].NbOfTxs`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CtrlSum' as 'number'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CtrlSum\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].CtrlSum != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].CtrlSum`, \"\")).to.equal(\"number\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'PmtTpInf' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"PmtTpInf\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].PmtTpInf != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].PmtTpInf`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ReqdExctnDt' as 'string'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ReqdExctnDt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ReqdExctnDt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ReqdExctnDt`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n            pm.test('CstmrCdtTrfInitn.PmtInf format to be date-time',function(){\n                pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.match(/^d{4}-d{2}-d{2}T([01]d|2[0-3]):([0-5]d):([0-5]d)$/);\n            })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'Dbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"Dbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].Dbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].Dbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAcct' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAcct\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAcct != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAcct`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'DbtrAgt' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"DbtrAgt\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].DbtrAgt != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].DbtrAgt`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'UltmtDbtr' as 'object'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"UltmtDbtr\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].UltmtDbtr != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].UltmtDbtr`, \"\")).to.equal(\"object\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBr' as number`,function(){  \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBr\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBr != null ){\n              pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBr`, 200)).to.equal(\"number\");\n            }\n          }   \n        })\n\n \n        pm.test('CstmrCdtTrfInitn.PmtInf to be one of enum', function(){ \n          pm.expect(_.get(responseData, \"CstmrCdtTrfInitn.PmtInf\", \"\")).to.include.oneOf([\"0\"]);\n        })\n\n      pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'ChrgBrSpecified' as 'boolean'`,function(){ \n        if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"ChrgBrSpecified\")){\n          if(responseData.CstmrCdtTrfInitn.PmtInf[i].ChrgBrSpecified != null){\n            pm.expect(typeof _.get(responseData,`CstmrCdtTrfInitn.PmtInf[${i}].ChrgBrSpecified`, \"\")).to.equal(\"boolean\");\n          }\n        }\n      })\n \n\n        pm.test(`${i} element of array 'CstmrCdtTrfInitn.PmtInf' has 'CdtTrfTxInf' as an array`,function(){ \n          if(pm.expect(responseData.CstmrCdtTrfInitn.PmtInf[i]).to.have.nested.property(\"CdtTrfTxInf\")){\n            if(responseData.CstmrCdtTrfInitn.PmtInf[i].CdtTrfTxInf != null){\n              pm.expect(Array.isArray(_.get(responseData, `CstmrCdtTrfInitn.PmtInf[${i}].CdtTrfTxInf`))).to.equal(true);\n            }\n          }\n        })\n\n  \n          }\n\n      })\n});\n}\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        }
                      ],
                      "event": []
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        {
          "id": "f4096859-6f23-453b-ac1e-6c1782ac7b84",
          "name": "consents",
          "item": [
            {
              "id": "3ffa0225-e0fe-480a-b770-5d3b20a26096",
              "name": "Post Consent",
              "request": {
                "name": "Post Consent",
                "description": {},
                "url": {
                  "path": [
                    "v1",
                    "consents"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": "(Required) ",
                    "key": "PSU-ID",
                    "value": "{{PSU-ID}}"
                  },
                  {
                    "disabled": false,
                    "description": "(Required) ",
                    "key": "PSU-IP-Address",
                    "value": "{{PSU-IP-Address}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"access\": {\n        \"allPsd2\": \"{{allPsd2}}\",\n        \"availableaccounts\": \"{{availableaccounts}}\",\n        \"balances\": \"{{balances}}\",\n        \"transactions\": \"{{transactions}}\",\n        \"accounts\": \"{{accounts}}\"\n    },\n    \"recurringIndicator\": \"{{recurringIndicator}}\",\n    \"validUntil\": \"{{validUntil}}\",\n    \"frequencyPerDay\": \"{{frequencyPerDay}}\",\n    \"combinedServiceIndicator\": \"{{combinedServiceIndicator}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "5e5ed2ff-f287-4506-abf0-90e149e1fe99",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v1",
                        "consents"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Content-Type",
                        "value": "elit nostrud minim"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-IP-Address",
                        "value": "{{PSU-IP-Address}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"access\": {\n        \"allPsd2\": \"{{allPsd2}}\",\n        \"availableaccounts\": \"{{availableaccounts}}\",\n        \"balances\": \"{{balances}}\",\n        \"transactions\": \"{{transactions}}\",\n        \"accounts\": \"{{accounts}}\"\n    },\n    \"recurringIndicator\": \"{{recurringIndicator}}\",\n    \"validUntil\": \"{{validUntil}}\",\n    \"frequencyPerDay\": \"{{frequencyPerDay}}\",\n    \"combinedServiceIndicator\": \"{{combinedServiceIndicator}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "header": [
                    {
                      "disabled": false,
                      "description": "X-Request-ID",
                      "key": "X-Request-ID",
                      "value": "{{X-Request-ID}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"consentStatus\": \"tempor magna\",\n  \"consentId\": \"consectetur amet eu dolor\",\n  \"psuMessage\": \"commodo mollit eu voluptate irure\",\n  \"tppMessages\": [\n    {\n      \"category\": \"sint irure veniam proident\",\n      \"code\": \"Excepteur aliquip adipisicing labori\",\n      \"path\": \"esse anim aute magna\",\n      \"text\": \"cillum ut deserunt culpa\"\n    },\n    {\n      \"category\": \"irure Lorem adipisicing\",\n      \"code\": \"eu qui do\",\n      \"path\": \"ipsum in laborum commodo\",\n      \"text\": \"ea laboris magna\"\n    }\n  ],\n  \"_links\": {\n    \"Duis6\": {\n      \"href\": \"pariatur in aliqua veniam\"\n    }\n  }\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "4b2a4758-b410-4f7a-9275-df5ea39ecf14",
                  "name": "Bad Request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v1",
                        "consents"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Content-Type",
                        "value": "elit nostrud minim"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-IP-Address",
                        "value": "{{PSU-IP-Address}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"access\": {\n        \"allPsd2\": \"{{allPsd2}}\",\n        \"availableaccounts\": \"{{availableaccounts}}\",\n        \"balances\": \"{{balances}}\",\n        \"transactions\": \"{{transactions}}\",\n        \"accounts\": \"{{accounts}}\"\n    },\n    \"recurringIndicator\": \"{{recurringIndicator}}\",\n    \"validUntil\": \"{{validUntil}}\",\n    \"frequencyPerDay\": \"{{frequencyPerDay}}\",\n    \"combinedServiceIndicator\": \"{{combinedServiceIndicator}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "disabled": false,
                      "description": "X-Request-ID",
                      "key": "X-Request-ID",
                      "value": "{{X-Request-ID}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "12ae464b-ee66-4978-b71b-d6ae327469d7",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v1",
                        "consents"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "Content-Type",
                        "value": "elit nostrud minim"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-IP-Address",
                        "value": "{{PSU-IP-Address}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"access\": {\n        \"allPsd2\": \"{{allPsd2}}\",\n        \"availableaccounts\": \"{{availableaccounts}}\",\n        \"balances\": \"{{balances}}\",\n        \"transactions\": \"{{transactions}}\",\n        \"accounts\": \"{{accounts}}\"\n    },\n    \"recurringIndicator\": \"{{recurringIndicator}}\",\n    \"validUntil\": \"{{validUntil}}\",\n    \"frequencyPerDay\": \"{{frequencyPerDay}}\",\n    \"combinedServiceIndicator\": \"{{combinedServiceIndicator}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "disabled": false,
                      "description": "X-Request-ID",
                      "key": "X-Request-ID",
                      "value": "{{X-Request-ID}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/consents for http method type post in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");\n      pm.test('Response has the `consentStatus` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"consentStatus\")){\n          if(responseData.consentStatus!=null){\n            pm.expect(typeof _.get(responseData, \"consentStatus\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `consentId` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"consentId\")){\n          if(responseData.consentId!=null){\n            pm.expect(typeof _.get(responseData, \"consentId\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 400){\n    pm.test(\"Bad Request\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Bad Request\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "47c941e8-0d5e-4069-85ff-79d2862d0375",
              "name": "{consentId}",
              "item": [
                {
                  "id": "6aebbf82-1445-4fe4-b10a-9cabca751945",
                  "name": "Get Consent",
                  "request": {
                    "name": "Get Consent",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "consents",
                        ":consentId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{consentId}}",
                          "key": "consentId",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "8a4f67ef-0ecb-4956-9c0e-e27b00f44d86",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "consents",
                            ":consentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{consentId}}",
                              "key": "consentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"access\": {\n    \"balances\": [\n      {\n        \"iban\": \"<string>\",\n        \"bban\": \"<string>\",\n        \"pan\": \"<string>\",\n        \"maskedPan\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"currency\": \"<string>\",\n        \"bbank\": \"<string>\"\n      },\n      {\n        \"iban\": \"<string>\",\n        \"bban\": \"<string>\",\n        \"pan\": \"<string>\",\n        \"maskedPan\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"currency\": \"<string>\",\n        \"bbank\": \"<string>\"\n      }\n    ],\n    \"transactions\": [\n      {\n        \"iban\": \"<string>\",\n        \"bban\": \"<string>\",\n        \"pan\": \"<string>\",\n        \"maskedPan\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"currency\": \"<string>\",\n        \"bbank\": \"<string>\"\n      },\n      {\n        \"iban\": \"<string>\",\n        \"bban\": \"<string>\",\n        \"pan\": \"<string>\",\n        \"maskedPan\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"currency\": \"<string>\",\n        \"bbank\": \"<string>\"\n      }\n    ],\n    \"accounts\": [\n      {\n        \"iban\": \"<string>\",\n        \"bban\": \"<string>\",\n        \"pan\": \"<string>\",\n        \"maskedPan\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"currency\": \"<string>\",\n        \"bbank\": \"<string>\"\n      },\n      {\n        \"iban\": \"<string>\",\n        \"bban\": \"<string>\",\n        \"pan\": \"<string>\",\n        \"maskedPan\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"currency\": \"<string>\",\n        \"bbank\": \"<string>\"\n      }\n    ]\n  },\n  \"recurringIndicator\": true,\n  \"validUntil\": \"quis reprehenderit\",\n  \"frequencyPerDay\": 66699028,\n  \"combinedServiceIndicator\": false,\n  \"consentStatus\": \"e\",\n  \"lastActionDate\": \"sunt aute eiusmod cillum id\",\n  \"_links\": {\n    \"tempor4\": {\n      \"href\": \"consequat Lorem sit\"\n    },\n    \"labore_20\": {\n      \"href\": \"irure\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "83b2bea9-9e4e-4967-ab25-a9ee33fd54a6",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "consents",
                            ":consentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{consentId}}",
                              "key": "consentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "b44895f8-812d-40ea-a26b-52ed52d47631",
                      "name": "Forbidden",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "consents",
                            ":consentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{consentId}}",
                              "key": "consentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/consents/:consentId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `access` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"access\")){\n          if(responseData.access!=null){\n            pm.expect(typeof _.get(responseData, \"access\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `access.balances` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"access.balances\")){\n            if(responseData.access.balances!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"access.balances\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `access.balances` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"access.balances\");  \n          let balancesArray = _.get(responseData, \"access.balances\", \"\");  \n          for (let i = 0; i < balancesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'access.balances' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"iban\")){\n          if(responseData.access.balances[i].iban != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"bban\")){\n          if(responseData.access.balances[i].bban != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"pan\")){\n          if(responseData.access.balances[i].pan != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'maskedPan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"maskedPan\")){\n          if(responseData.access.balances[i].maskedPan != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].maskedPan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"bic\")){\n          if(responseData.access.balances[i].bic != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"currency\")){\n          if(responseData.access.balances[i].currency != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'bbank' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"bbank\")){\n          if(responseData.access.balances[i].bbank != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].bbank`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n      \n        pm.test('Response has the `access.transactions` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"access.transactions\")){\n            if(responseData.access.transactions!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"access.transactions\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `access.transactions` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"access.transactions\");  \n          let transactionsArray = _.get(responseData, \"access.transactions\", \"\");  \n          for (let i = 0; i < transactionsArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'access.transactions' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"iban\")){\n          if(responseData.access.transactions[i].iban != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"bban\")){\n          if(responseData.access.transactions[i].bban != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"pan\")){\n          if(responseData.access.transactions[i].pan != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'maskedPan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"maskedPan\")){\n          if(responseData.access.transactions[i].maskedPan != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].maskedPan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"bic\")){\n          if(responseData.access.transactions[i].bic != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"currency\")){\n          if(responseData.access.transactions[i].currency != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'bbank' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"bbank\")){\n          if(responseData.access.transactions[i].bbank != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].bbank`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n      \n        pm.test('Response has the `access.accounts` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"access.accounts\")){\n            if(responseData.access.accounts!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"access.accounts\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `access.accounts` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"access.accounts\");  \n          let accountsArray = _.get(responseData, \"access.accounts\", \"\");  \n          for (let i = 0; i < accountsArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'access.accounts' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"iban\")){\n          if(responseData.access.accounts[i].iban != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"bban\")){\n          if(responseData.access.accounts[i].bban != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"pan\")){\n          if(responseData.access.accounts[i].pan != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'maskedPan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"maskedPan\")){\n          if(responseData.access.accounts[i].maskedPan != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].maskedPan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"bic\")){\n          if(responseData.access.accounts[i].bic != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"currency\")){\n          if(responseData.access.accounts[i].currency != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'bbank' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"bbank\")){\n          if(responseData.access.accounts[i].bbank != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].bbank`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `recurringIndicator` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"recurringIndicator\")){\n          if(responseData.recurringIndicator!=null){\n            pm.expect(typeof _.get(responseData, \"recurringIndicator\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `validUntil` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"validUntil\")){\n          if(responseData.validUntil!=null){\n            pm.expect(typeof _.get(responseData, \"validUntil\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `frequencyPerDay` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"frequencyPerDay\")){\n            if(responseData.frequencyPerDay!=null){\n              pm.expect(typeof _.get(responseData, \"frequencyPerDay\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n\n      pm.test('Response has the `combinedServiceIndicator` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"combinedServiceIndicator\")){\n          if(responseData.combinedServiceIndicator!=null){\n            pm.expect(typeof _.get(responseData, \"combinedServiceIndicator\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `consentStatus` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"consentStatus\")){\n          if(responseData.consentStatus!=null){\n            pm.expect(typeof _.get(responseData, \"consentStatus\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `lastActionDate` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"lastActionDate\")){\n          if(responseData.lastActionDate!=null){\n            pm.expect(typeof _.get(responseData, \"lastActionDate\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 403){\n    pm.test(\"Forbidden\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Forbidden\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "34968c00-dd44-4505-8188-a15c3090e581",
                  "name": "Delete Consent",
                  "request": {
                    "name": "Delete Consent",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "consents",
                        ":consentId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{consentId}}",
                          "key": "consentId",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "10439180-4a86-4ba4-a933-6bdd6b6c56c7",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "consents",
                            ":consentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{consentId}}",
                              "key": "consentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "No Content",
                      "code": 204,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": [],
                      "_postman_previewlanguage": "text"
                    },
                    {
                      "id": "691372aa-ddc7-4dae-8776-631b89beca20",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "consents",
                            ":consentId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{consentId}}",
                              "key": "consentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/consents/:consentId for http method type delete in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 204){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"No Content\");});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "32c24eaa-ccaa-4090-9fe3-9aa1a6910ba9",
                  "name": "Get Consent Status",
                  "request": {
                    "name": "Get Consent Status",
                    "description": {},
                    "url": {
                      "path": [
                        "v1",
                        "consents",
                        ":consentId",
                        "status"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{consentId}}",
                          "key": "consentId",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": "(Required) ",
                        "key": "PSU-ID",
                        "value": "{{PSU-ID}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "723b4d93-1906-4b21-baa7-5238d8ec6a54",
                      "name": "Success",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "consents",
                            ":consentId",
                            "status"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{consentId}}",
                              "key": "consentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"consentStatus\": \"enim dolore anim\",\n  \"_links\": {\n    \"culpa_d1\": {\n      \"href\": \"Lorem elit\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "ef95e30e-5d31-448b-b651-97123766ba26",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "consents",
                            ":consentId",
                            "status"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{consentId}}",
                              "key": "consentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "17d0246a-a846-4b62-b4be-22fe3ceaa46f",
                      "name": "Forbidden",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "consents",
                            ":consentId",
                            "status"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{consentId}}",
                              "key": "consentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "Content-Type",
                            "value": "elit nostrud minim"
                          },
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "disabled": false,
                          "description": "X-Request-ID",
                          "key": "X-Request-ID",
                          "value": "{{X-Request-ID}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"psuMessage\": \"officia ipsum quis est\",\n  \"tppMessages\": [\n    {\n      \"category\": \"do minim eiusmod aliqua sunt\",\n      \"code\": \"minim cupidatat\",\n      \"path\": \"occaecat in in\",\n      \"text\": \"eiusmod\"\n    },\n    {\n      \"category\": \"esse culpa\",\n      \"code\": \"voluptate consequat do in\",\n      \"path\": \"deserunt dolore\",\n      \"text\": \"in laboris dolore\"\n    }\n  ],\n  \"_links\": {\n    \"aliqua69\": {\n      \"href\": \"ut\"\n    },\n    \"ut4a1\": {\n      \"href\": \"veniam sint e\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/consents/:consentId/status for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `consentStatus` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"consentStatus\")){\n          if(responseData.consentStatus!=null){\n            pm.expect(typeof _.get(responseData, \"consentStatus\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 401){\n    pm.test(\"Unauthorized\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Unauthorized\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n\nif (pm.response.code == 403){\n    pm.test(\"Forbidden\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Forbidden\");\n      pm.test('Response has the `psuMessage` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"psuMessage\")){\n          if(responseData.psuMessage!=null){\n            pm.expect(typeof _.get(responseData, \"psuMessage\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `tppMessages` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"tppMessages\")){\n            if(responseData.tppMessages!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"tppMessages\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `tppMessages` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"tppMessages\");  \n          let tppMessagesArray = _.get(responseData, \"tppMessages\", \"\");  \n          for (let i = 0; i < tppMessagesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'tppMessages' has 'category' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"category\")){\n          if(responseData.tppMessages[i].category != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].category`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'code' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"code\")){\n          if(responseData.tppMessages[i].code != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].code`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'path' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"path\")){\n          if(responseData.tppMessages[i].path != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].path`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'tppMessages' has 'text' as 'string'`,function(){ \n        if(pm.expect(responseData.tppMessages[i]).to.have.nested.property(\"text\")){\n          if(responseData.tppMessages[i].text != null){\n            pm.expect(typeof _.get(responseData,`tppMessages[${i}].text`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "4428099d-a07b-4110-bdae-d426b8aecb70",
                  "name": "authorisations",
                  "item": [
                    {
                      "id": "667315ce-724b-41f8-b2a8-500d47a4aa4d",
                      "name": "Get Authorisations",
                      "request": {
                        "name": "Get Authorisations",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "consents",
                            ":consentId",
                            "authorisations"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{consentId}}",
                              "key": "consentId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "7ff48741-2e79-47f6-85f4-1bfe9fc48d82",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "consents",
                                ":consentId",
                                "authorisations"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{consentId}}",
                                  "key": "consentId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"authorisationIds\": [\n    \"sed consequat \",\n    \"quis\"\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/consents/:consentId/authorisations for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `access` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"access\")){\n          if(responseData.access!=null){\n            pm.expect(typeof _.get(responseData, \"access\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `access.balances` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"access.balances\")){\n            if(responseData.access.balances!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"access.balances\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `access.balances` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"access.balances\");  \n          let balancesArray = _.get(responseData, \"access.balances\", \"\");  \n          for (let i = 0; i < balancesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'access.balances' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"iban\")){\n          if(responseData.access.balances[i].iban != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"bban\")){\n          if(responseData.access.balances[i].bban != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"pan\")){\n          if(responseData.access.balances[i].pan != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'maskedPan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"maskedPan\")){\n          if(responseData.access.balances[i].maskedPan != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].maskedPan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"bic\")){\n          if(responseData.access.balances[i].bic != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"currency\")){\n          if(responseData.access.balances[i].currency != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'bbank' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"bbank\")){\n          if(responseData.access.balances[i].bbank != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].bbank`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n      \n        pm.test('Response has the `access.transactions` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"access.transactions\")){\n            if(responseData.access.transactions!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"access.transactions\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `access.transactions` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"access.transactions\");  \n          let transactionsArray = _.get(responseData, \"access.transactions\", \"\");  \n          for (let i = 0; i < transactionsArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'access.transactions' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"iban\")){\n          if(responseData.access.transactions[i].iban != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"bban\")){\n          if(responseData.access.transactions[i].bban != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"pan\")){\n          if(responseData.access.transactions[i].pan != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'maskedPan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"maskedPan\")){\n          if(responseData.access.transactions[i].maskedPan != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].maskedPan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"bic\")){\n          if(responseData.access.transactions[i].bic != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"currency\")){\n          if(responseData.access.transactions[i].currency != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'bbank' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"bbank\")){\n          if(responseData.access.transactions[i].bbank != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].bbank`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n      \n        pm.test('Response has the `access.accounts` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"access.accounts\")){\n            if(responseData.access.accounts!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"access.accounts\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `access.accounts` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"access.accounts\");  \n          let accountsArray = _.get(responseData, \"access.accounts\", \"\");  \n          for (let i = 0; i < accountsArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'access.accounts' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"iban\")){\n          if(responseData.access.accounts[i].iban != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"bban\")){\n          if(responseData.access.accounts[i].bban != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"pan\")){\n          if(responseData.access.accounts[i].pan != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'maskedPan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"maskedPan\")){\n          if(responseData.access.accounts[i].maskedPan != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].maskedPan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"bic\")){\n          if(responseData.access.accounts[i].bic != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"currency\")){\n          if(responseData.access.accounts[i].currency != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'bbank' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"bbank\")){\n          if(responseData.access.accounts[i].bbank != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].bbank`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `recurringIndicator` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"recurringIndicator\")){\n          if(responseData.recurringIndicator!=null){\n            pm.expect(typeof _.get(responseData, \"recurringIndicator\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `validUntil` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"validUntil\")){\n          if(responseData.validUntil!=null){\n            pm.expect(typeof _.get(responseData, \"validUntil\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `frequencyPerDay` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"frequencyPerDay\")){\n            if(responseData.frequencyPerDay!=null){\n              pm.expect(typeof _.get(responseData, \"frequencyPerDay\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n\n      pm.test('Response has the `combinedServiceIndicator` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"combinedServiceIndicator\")){\n          if(responseData.combinedServiceIndicator!=null){\n            pm.expect(typeof _.get(responseData, \"combinedServiceIndicator\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `consentStatus` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"consentStatus\")){\n          if(responseData.consentStatus!=null){\n            pm.expect(typeof _.get(responseData, \"consentStatus\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `lastActionDate` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"lastActionDate\")){\n          if(responseData.lastActionDate!=null){\n            pm.expect(typeof _.get(responseData, \"lastActionDate\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "07ad2867-a7e7-4107-9387-80e5c5fa84f5",
                      "name": "Get Authorisation",
                      "request": {
                        "name": "Get Authorisation",
                        "description": {},
                        "url": {
                          "path": [
                            "v1",
                            "consents",
                            ":consentId",
                            "authorisations",
                            ":authorisationId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{consentId}}",
                              "key": "consentId",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{authorisationId}}",
                              "key": "authorisationId",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": "(Required) ",
                            "key": "PSU-ID",
                            "value": "{{PSU-ID}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "7191a576-2d74-46e1-ab27-4dd85d5c9268",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "consents",
                                ":consentId",
                                "authorisations",
                                ":authorisationId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{consentId}}",
                                  "key": "consentId",
                                  "description": "(Required) "
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{authorisationId}}",
                                  "key": "authorisationId",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "Content-Type",
                                "value": "elit nostrud minim"
                              },
                              {
                                "disabled": false,
                                "description": "(Required) ",
                                "key": "PSU-ID",
                                "value": "{{PSU-ID}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "disabled": false,
                              "description": "X-Request-ID",
                              "key": "X-Request-ID",
                              "value": "{{X-Request-ID}}"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"scaStatus\": \"sed Excepteur aute dolor\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              " \n// Test generated by RoostGPT for test api-postman-azure using AI Type Azure Open AI and AI Model roost-gpt4-32k\n\n\n\n// Test generated for /v1/consents/:consentId/authorisations/:authorisationId for http method type get in postman framework\n\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"Success\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");\n      pm.test('Response has the `access` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"access\")){\n          if(responseData.access!=null){\n            pm.expect(typeof _.get(responseData, \"access\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n      \n        pm.test('Response has the `access.balances` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"access.balances\")){\n            if(responseData.access.balances!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"access.balances\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `access.balances` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"access.balances\");  \n          let balancesArray = _.get(responseData, \"access.balances\", \"\");  \n          for (let i = 0; i < balancesArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'access.balances' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"iban\")){\n          if(responseData.access.balances[i].iban != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"bban\")){\n          if(responseData.access.balances[i].bban != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"pan\")){\n          if(responseData.access.balances[i].pan != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'maskedPan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"maskedPan\")){\n          if(responseData.access.balances[i].maskedPan != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].maskedPan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"bic\")){\n          if(responseData.access.balances[i].bic != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"currency\")){\n          if(responseData.access.balances[i].currency != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.balances' has 'bbank' as 'string'`,function(){ \n        if(pm.expect(responseData.access.balances[i]).to.have.nested.property(\"bbank\")){\n          if(responseData.access.balances[i].bbank != null){\n            pm.expect(typeof _.get(responseData,`access.balances[${i}].bbank`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n      \n        pm.test('Response has the `access.transactions` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"access.transactions\")){\n            if(responseData.access.transactions!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"access.transactions\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `access.transactions` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"access.transactions\");  \n          let transactionsArray = _.get(responseData, \"access.transactions\", \"\");  \n          for (let i = 0; i < transactionsArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'access.transactions' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"iban\")){\n          if(responseData.access.transactions[i].iban != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"bban\")){\n          if(responseData.access.transactions[i].bban != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"pan\")){\n          if(responseData.access.transactions[i].pan != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'maskedPan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"maskedPan\")){\n          if(responseData.access.transactions[i].maskedPan != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].maskedPan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"bic\")){\n          if(responseData.access.transactions[i].bic != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"currency\")){\n          if(responseData.access.transactions[i].currency != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.transactions' has 'bbank' as 'string'`,function(){ \n        if(pm.expect(responseData.access.transactions[i]).to.have.nested.property(\"bbank\")){\n          if(responseData.access.transactions[i].bbank != null){\n            pm.expect(typeof _.get(responseData,`access.transactions[${i}].bbank`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n      \n        pm.test('Response has the `access.accounts` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"access.accounts\")){\n            if(responseData.access.accounts!=null){\n              pm.expect(Array.isArray(_.get(responseData, \"access.accounts\"))).to.equal(true);\n            }\n          }\n\n        })\n          \n\n      pm.test('Each object in the `access.accounts` field has all the required fields',function(){         \n          pm.expect(responseData).to.have.nested.property(\"access.accounts\");  \n          let accountsArray = _.get(responseData, \"access.accounts\", \"\");  \n          for (let i = 0; i < accountsArray.length; i++) {  \n            \t\n      pm.test(`${i} element of array 'access.accounts' has 'iban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"iban\")){\n          if(responseData.access.accounts[i].iban != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].iban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'bban' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"bban\")){\n          if(responseData.access.accounts[i].bban != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].bban`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'pan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"pan\")){\n          if(responseData.access.accounts[i].pan != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].pan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'maskedPan' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"maskedPan\")){\n          if(responseData.access.accounts[i].maskedPan != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].maskedPan`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'bic' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"bic\")){\n          if(responseData.access.accounts[i].bic != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].bic`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'currency' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"currency\")){\n          if(responseData.access.accounts[i].currency != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].currency`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n\n      pm.test(`${i} element of array 'access.accounts' has 'bbank' as 'string'`,function(){ \n        if(pm.expect(responseData.access.accounts[i]).to.have.nested.property(\"bbank\")){\n          if(responseData.access.accounts[i].bbank != null){\n            pm.expect(typeof _.get(responseData,`access.accounts[${i}].bbank`, \"\")).to.equal(\"string\");\n          }\n        }\n      })\n \n  \n          }\n\n      })\n\n      pm.test('Response has the `recurringIndicator` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"recurringIndicator\")){\n          if(responseData.recurringIndicator!=null){\n            pm.expect(typeof _.get(responseData, \"recurringIndicator\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `validUntil` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"validUntil\")){\n          if(responseData.validUntil!=null){\n            pm.expect(typeof _.get(responseData, \"validUntil\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n        pm.test('Response has the `frequencyPerDay` field',function(){\n          if(pm.expect(responseData).to.have.nested.property(\"frequencyPerDay\")){\n            if(responseData.frequencyPerDay!=null){\n              pm.expect(typeof _.get(responseData, \"frequencyPerDay\", 200)).to.equal(\"number\");\n            }\n          }\n\n        })\n\n      pm.test('Response has the `combinedServiceIndicator` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"combinedServiceIndicator\")){\n          if(responseData.combinedServiceIndicator!=null){\n            pm.expect(typeof _.get(responseData, \"combinedServiceIndicator\", \"\")).to.equal(\"boolean\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `consentStatus` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"consentStatus\")){\n          if(responseData.consentStatus!=null){\n            pm.expect(typeof _.get(responseData, \"consentStatus\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `lastActionDate` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"lastActionDate\")){\n          if(responseData.lastActionDate!=null){\n            pm.expect(typeof _.get(responseData, \"lastActionDate\", \"\")).to.equal(\"string\");\n          }\n        }\n\n      })\n          \n\n      pm.test('Response has the `_links` field',function(){\n        if(pm.expect(responseData).to.have.nested.property(\"_links\")){\n          if(responseData._links!=null){\n            pm.expect(typeof _.get(responseData, \"_links\", \"\")).to.equal(\"object\");\n          }\n        }\n\n      })\n          \n});\n}\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "//xs2a.rbinternational.com",
      "key": "baseUrl"
    },
    {
      "type": "integer",
      "value": 200,
      "key": "statusCode"
    }
  ],
  "info": {
    "_postman_id": "22cf73ac-7ade-4b29-9105-8eb4e9da7e3d",
    "name": "XS2A Service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}